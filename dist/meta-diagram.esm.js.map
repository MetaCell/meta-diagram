{"version":3,"file":"meta-diagram.esm.js","sources":["../src/constants.ts","../src/react-diagrams/MetaNodeModel.ts","../src/models/MetaNode.ts","../src/react-diagrams/MetaLinkModel.ts","../src/models/MetaLink.ts","../src/models/ComponentsMap.ts","../src/components/UnknownTypeWidget.tsx","../src/react-diagrams/MetaNodeFactory.tsx","../src/react-diagrams/MetaLinkFactory.tsx","../src/helpers/nodesHelper.ts","../src/helpers/linksHelper.ts","../src/components/assets/styles/variables.ts","../src/components/Sidebar.tsx","../src/theme.ts","../src/models/Position.ts","../src/index.tsx"],"sourcesContent":["export enum ReactDiagramMetaTypes {\n  META_NODE = 'meta-node-type',\n  META_LINK = 'meta-link-type',\n}\n","import { DefaultPortModel, NodeModel } from '@projectstorm/react-diagrams';\nimport { ReactDiagramMetaTypes } from '../constants';\n\nexport class MetaNodeModel extends NodeModel {\n  constructor(options = {}) {\n    super({\n      ...options,\n      type: ReactDiagramMetaTypes.META_NODE,\n    });\n\n    // set up an in and out port\n\n    this.addPort(\n      new DefaultPortModel({\n        in: true,\n        name: 'in',\n      })\n    );\n    this.addPort(\n      new DefaultPortModel({\n        in: false,\n        name: 'out',\n      })\n    );\n  }\n}\n","import { Position } from './Position';\nimport {MetaNodeModel} from \"../react-diagrams/MetaNodeModel\";\n\nexport class MetaNode {\n  private readonly parent: MetaNode | undefined;\n  private readonly position: Position;\n  private readonly options: Map<string, any>;;\n\n  constructor(\n    id: string,\n    name: string,\n    shape: string,\n    position: Position,\n    parent: MetaNode | undefined,\n    options: Map<string, any>\n  ) {\n    this.parent = parent\n    this.position = position\n    this.options = options\n    this.options.set('id', id);\n    this.options.set('name', name);\n    this.options.set('shape', shape);\n  }\n\n  getId() : string{\n    return this.options.get('id')\n  }\n\n  getParentId() : string | undefined {\n    return this.parent?.getId()\n  }\n\n  getWorldPosition() : Position {\n    return this.parent ? this.position.add(this.parent?.getWorldPosition()) : this.position\n  }\n\n  toModel() : MetaNodeModel {\n    const optionsMap = this.options\n    optionsMap.set('parentId', this.getParentId())\n    optionsMap.set('position', this.position)\n    return new MetaNodeModel(Object.fromEntries(optionsMap))\n  }\n\n}\n","import { DefaultLinkModel } from '@projectstorm/react-diagrams';\nimport { ReactDiagramMetaTypes } from '../constants';\n\nexport class MetaLinkModel extends DefaultLinkModel {\n  constructor(options = {}) {\n    super({\n      ...options,\n      type: ReactDiagramMetaTypes.META_LINK,\n    });\n  }\n}\n","import { ILink } from './ILink';\nimport {MetaLinkModel} from \"../react-diagrams/MetaLinkModel\";\n\nexport class MetaLink implements ILink {\n  sourceId: string;\n  sourcePortId: string;\n  targetId: string;\n  targetPortId: string;\n  options: Map<string, any>;\n\n  constructor(\n    id: string,\n    name: string,\n    shape: string,\n    sourceId: string,\n    sourcePortId: string,\n    targetId: string,\n    targetPortId: string,\n    options: Map<string, any>\n  ) {\n    this.sourceId = sourceId;\n    this.sourcePortId = sourcePortId;\n    this.targetId = targetId;\n    this.targetPortId = targetPortId;\n    this.options = options;\n    this.options.set('id', id);\n    this.options.set('name', name);\n    this.options.set('shape', shape);\n  }\n\n  getSourceId(): string {\n    return this.sourceId;\n  }\n\n  getSourcePortId(): string {\n    return this.sourcePortId;\n  }\n\n  getTargetId(): string {\n    return this.targetId;\n  }\n\n  getTargetPortId(): string {\n    return this.targetPortId;\n  }\n\n  toModel(): MetaLinkModel {\n    return new MetaLinkModel(Object.fromEntries(this.options))\n  }\n}\n","import React from 'react';\n\nexport class ComponentsMap {\n  nodes: Map<string, React.ComponentType>;\n  links: Map<string, React.ComponentType>;\n\n  constructor(\n    nodesMap: Map<string, React.ComponentType>,\n    linksMap: Map<string, React.ComponentType>\n  ) {\n    this.nodes = nodesMap;\n    this.links = linksMap;\n  }\n}\n","import React from 'react';\n\nexport const UnknownTypeWidget = () => {\n  return <div>Unknown Type</div>;\n};\n","import { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { MetaNodeModel } from './MetaNodeModel';\nimport { UnknownTypeWidget } from '../components/UnknownTypeWidget';\nimport React from 'react';\nimport { ReactDiagramMetaTypes } from '../constants';\n\nexport class MetaNodeFactory extends AbstractReactFactory {\n  componentsMap: Map<string, React.ComponentType>;\n\n  constructor(componentsMap: Map<string, React.ComponentType>) {\n    super(ReactDiagramMetaTypes.META_NODE);\n    this.componentsMap = componentsMap;\n  }\n\n  generateModel() {\n    return new MetaNodeModel();\n  }\n\n  generateReactWidget(event: any): JSX.Element {\n    if (this.componentsMap.has(event.model.options.shape)) {\n      const ReactComponentType = this.componentsMap.get(\n        event.model.options.shape\n      );\n      return (\n        // @ts-ignore\n        <ReactComponentType\n          key={`node-factory-${event.model.getOptions().id}`}\n          engine={this.engine}\n          model={event.model}\n        />\n      );\n    }\n    // TODO: Generate default node instead\n    return <UnknownTypeWidget />;\n  }\n}\n","import { MetaLinkModel } from './MetaLinkModel';\nimport { UnknownTypeWidget } from '../components/UnknownTypeWidget';\nimport { ReactDiagramMetaTypes } from '../constants';\nimport React from 'react';\nimport { DefaultLinkFactory } from '@projectstorm/react-diagrams';\n\nexport class MetaLinkFactory extends DefaultLinkFactory {\n  componentsMap: Map<string, JSX.Element>;\n\n  constructor(componentsMap: Map<string, JSX.Element>) {\n    super(ReactDiagramMetaTypes.META_LINK);\n    this.componentsMap = componentsMap;\n  }\n\n  generateModel() {\n    return new MetaLinkModel();\n  }\n\n  generateLinkSegment(\n    model: MetaLinkModel,\n    selected: boolean,\n    path: string\n  ): JSX.Element {\n    // @ts-ignore\n    if (this.componentsMap.has(model.getOptions()?.shape)) {\n      const ReactComponentType = this.componentsMap.get(\n        // @ts-ignore\n        model.getOptions().shape\n      );\n\n      return (\n        // @ts-ignore\n        <ReactComponentType\n          key={`link-factory-${model.getOptions().id}`}\n          engine={this.engine}\n          model={model}\n          path={path}\n          selected={selected}\n        />\n      );\n    }\n    // TODO: Generate default link instead\n    return <UnknownTypeWidget />;\n  }\n}\n","import { MetaNodeModel } from '../react-diagrams/MetaNodeModel';\nimport {MetaNode} from \"../models/MetaNode\";\nimport {BaseEntityEvent} from \"@projectstorm/react-canvas-core\";\nimport {NodeModel, NodeModelGenerics} from \"@projectstorm/react-diagrams\";\n\nexport function getNode(\n  id: string,\n  nodes: MetaNodeModel[]\n): MetaNodeModel | undefined {\n  return nodes.find(n => n.getOptions().id === id);\n}\n\n// @ts-ignore\nexport function processNodes(metaNodes: MetaNode[], callback: { (event: any): void; (arg0: BaseEntityEvent<NodeModel<NodeModelGenerics>>): void; }) : MetaNodeModel[] {\n  const metaNodeModels = []\n  for(const mn of metaNodes){\n    const metaNodeModel = mn.toModel()\n    const position = mn.getWorldPosition()\n    metaNodeModel.setPosition(position.x, position.y)\n    // @ts-ignore\n    //metaNodeModel.registerListener({positionChanged: (event => callback(event))})\n    metaNodeModels.push(metaNodeModel)\n  }\n  return metaNodeModels\n}\n","import { MetaLink } from '../models/MetaLink';\nimport { MetaLinkModel } from '../react-diagrams/MetaLinkModel';\nimport { MetaNodeModel } from '../react-diagrams/MetaNodeModel';\nimport { getNode } from './nodesHelper';\n\nexport function getLinkModel(\n  metaLink: MetaLink,\n  nodes: MetaNodeModel[]\n): MetaLinkModel | undefined {\n  const link = metaLink.toModel();\n  const source = getNode(metaLink.getSourceId(), nodes);\n  const target = getNode(metaLink.getTargetId(), nodes);\n  if (source && target) {\n    link.setSourcePort(source.getPort(metaLink.getSourcePortId()));\n    link.setTargetPort(target.getPort(metaLink.getTargetPortId()));\n    return link;\n  }\n  return undefined;\n}\n","const vars = {\n  fontFamily: 'Inter, sans-serif',\n  primaryBg: '#f1f1f1',\n  textWhite: '#FFFFFF',\n  chipTextColor: '#F2F2F7',\n  chipBgColor: 'rgba(60, 60, 67, 0.4)',\n\n  chipPrimaryTextColor: 'rgba(255, 255, 255, 0.8)',\n  chipPrimaryBgColor: 'rgba(0, 122, 255, 0.6)',\n\n  breadcrumbLinkColor: '#A2A2A2',\n  breadcrumbTextColor: '#292929',\n\n  buttonPrimaryBgColor: '4353FF',\n  buttonPrimaryBgHoverColor: '#3443E1',\n  buttonPrimaryDisabledBgColor: 'rgba(0, 122, 255, 0.4)',\n\n  listItemActiveBg: '#007AFF',\n  listSelectedTextColor: '#3C3C43',\n  listBoxShadow:\n    '0 0.1875rem 0.5rem rgba(0, 0, 0, 0.12), 0 0.1875rem 0.0625rem rgba(0, 0, 0, 0.04)',\n  listBorderColor: 'rgba(0, 0, 0, 0.04)',\n\n  dividerColor: 'rgba(118, 120, 125, 0.12)',\n\n  dropdownBg: 'rgba(246, 246, 248, 0.8)',\n  dropdownTextColor: 'rgba(60, 60, 67, 0.6)',\n\n  overlayColor: 'rgba(0, 0, 0, 0.4)',\n\n  progressBg: '#E5E5E5',\n  progressBar: '#017AFF',\n  progressShadow: 'inset 0 0 0.0625rem #E3E3E3',\n\n  switchShadow:\n    '0 0.1875rem 0.5rem rgba(0, 0, 0, 0.15), 0 0.1875rem 0.0625rem rgba(0, 0, 0, 0.06)',\n};\n\nexport default vars;\n","import React from 'react';\nimport { Box } from '@mui/system';\nimport { makeStyles } from '@mui/styles';\nimport vars from './assets/styles/variables';\nimport { Divider, List, ListItemButton, ListItemIcon } from '@mui/material';\nimport Move from './assets/svg/move.svg';\nimport Icon from './assets/svg/icon.svg';\nimport Node from './assets/svg/node.svg';\nimport Cursor from './assets/svg/cursor.svg';\nimport Fullscreen from './assets/svg/fullscreen.svg';\n\nconst { textWhite, dividerColor } = vars;\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    zIndex: '5',\n    width: '4rem',\n    background: textWhite,\n    boxShadow:\n      '0 0 3.75rem rgba(0, 0, 0, 0.1), 0 0.5rem 2.5rem -0.625rem rgba(0, 0, 0, 0.1)',\n    borderRadius: '2rem',\n    position: 'fixed',\n    left: '1rem',\n    top: '50%',\n    transform: 'translateY(-50%)',\n\n    '&.right': {\n      left: 'auto',\n      right: '1rem',\n    },\n\n    '& .MuiList-root': {\n      padding: '0.75rem',\n    },\n  },\n\n  node: {\n    margin: '0.25rem 0',\n    '& .MuiDivider-root': {\n      borderColor: dividerColor,\n      width: 'calc(100% - 1.5rem)',\n      margin: '0 auto',\n      border: 'none',\n      borderTop: '0.0625rem solid',\n    },\n\n    '& img': {\n      display: 'block',\n      margin: '1rem 0',\n    },\n  },\n}));\n\nconst Sidebar = () => {\n  const classes = useStyles();\n  return (\n    <Box className={`${classes.root} left`}>\n      <List disablePadding component=\"nav\">\n        <ListItemButton selected>\n          <ListItemIcon>\n            <img\n              src={`data:image/svg+xml;base64,${new Buffer(Cursor).toString(\n                'base64'\n              )}`}\n              alt=\"icon\"\n            />\n          </ListItemIcon>\n        </ListItemButton>\n\n        <ListItemButton>\n          <ListItemIcon>\n            <img\n              src={`data:image/svg+xml;base64,${new Buffer(Move).toString(\n                'base64'\n              )}`}\n              alt=\"move\"\n            />\n          </ListItemIcon>\n        </ListItemButton>\n      </List>\n\n      <Box className={classes.node}>\n        <Divider />\n        <img\n          src={`data:image/svg+xml;base64,${new Buffer(Node).toString(\n            'base64'\n          )}`}\n          alt=\"node\"\n        />\n        <Divider />\n      </Box>\n\n      <List disablePadding component=\"nav\">\n        <ListItemButton disabled>\n          <ListItemIcon>\n            <img\n              src={`data:image/svg+xml;base64,${new Buffer(Icon).toString(\n                'base64'\n              )}`}\n              alt=\"icon\"\n            />\n          </ListItemIcon>\n        </ListItemButton>\n\n        <ListItemButton>\n          <ListItemIcon>\n            <img\n              src={`data:image/svg+xml;base64,${new Buffer(Fullscreen).toString(\n                'base64'\n              )}`}\n              alt=\"fullscreen\"\n            />\n          </ListItemIcon>\n        </ListItemButton>\n      </List>\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","import vars from './components/assets/styles/variables';\n\ntype ThemeVars = {\n  [key: string]: any;\n};\n\nconst applicationTheme = (params: ThemeVars) => {\n  const {\n    primaryBg,\n    fontFamily,\n    chipTextColor,\n    chipBgColor,\n    textWhite,\n    listItemActiveBg,\n    listSelectedTextColor,\n    listBoxShadow,\n    listBorderColor,\n  } = params;\n  return {\n    components: {\n      MuiCssBaseline: {\n        styleOverrides: `\n          html {\n            background: ${primaryBg};\n            font-family: ${fontFamily};\n          }\n          body {\n            background-color:${primaryBg};\n            font-family: ${fontFamily};\n            font-size: 1rem;\n          }\n        `,\n      },\n      MuiList: {\n        styleOverrides: {\n          root: {\n            '&.customSwitch': {\n              padding: '0.125rem',\n              background: chipTextColor,\n              borderRadius: '0.5rem',\n              display: 'flex',\n              '& .MuiListItemButton-root': {\n                padding: '0.25rem 0.75rem',\n                borderRadius: '0.4375rem',\n                width: '10.59375rem',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                '&:not(:last-child)': {\n                  marginBottom: '0',\n                },\n                '&.Mui-disabled': {\n                  opacity: 1,\n                },\n                '&.Mui-selected': {\n                  background: textWhite,\n                  boxShadow: listBoxShadow,\n                  border: `0.03125rem solid ${listBorderColor}`,\n                  '& .MuiTypography-root': {\n                    color: listSelectedTextColor,\n                  },\n                },\n              },\n              '& .MuiChip-root': {\n                marginLeft: '0.25rem',\n              },\n              '& .MuiTypography-root': {\n                fontWeight: 500,\n                fontSize: '0.8125rem',\n                lineHeight: '1.25rem',\n                letterSpacing: '-0.005rem',\n                color: chipBgColor,\n                margin: 0,\n              },\n            },\n          },\n        },\n      },\n      MuiListItemIcon: {\n        styleOverrides: {\n          root: {\n            minWidth: 'inherit',\n          },\n        },\n      },\n      MuiListItemButton: {\n        styleOverrides: {\n          root: {\n            padding: 0,\n            width: '2.5rem',\n            height: '2.5rem',\n            borderRadius: '50%',\n            justifyContent: 'center',\n            backgroundColor: chipTextColor,\n            '&:hover': {\n              backgroundColor: chipTextColor,\n            },\n            '&:not(:last-child)': {\n              marginBottom: '0.75rem',\n            },\n            '&.Mui-selected': {\n              backgroundColor: listItemActiveBg,\n              '&:hover': {\n                backgroundColor: listItemActiveBg,\n              },\n            },\n            '&.Mui-disabled': {\n              opacity: 0.8,\n            },\n          },\n        },\n      },\n    },\n  };\n};\n\nexport default (customVariables: ThemeVars) =>\n  applicationTheme({\n    ...vars,\n    ...customVariables,\n  });\n","export class Position {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(otherPosition: Position) : Position {\n    return new Position(this.x+ otherPosition.x, this.y + otherPosition.y)\n  }\n\n  sub(otherPosition: Position) : Position {\n    return new Position(this.x - otherPosition.x, this.y - otherPosition.y)\n  }\n}\n","import * as React from 'react';\nimport { MetaNode } from './models/MetaNode';\nimport { MetaLink } from './models/MetaLink';\nimport { ComponentsMap } from './models/ComponentsMap';\nimport createEngine, { DiagramModel } from '@projectstorm/react-diagrams';\nimport { MetaNodeFactory } from './react-diagrams/MetaNodeFactory';\nimport { MetaLinkFactory } from './react-diagrams/MetaLinkFactory';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport { MetaNodeModel } from './react-diagrams/MetaNodeModel';\nimport { getLinkModel } from './helpers/linksHelper';\nimport { makeStyles } from '@mui/styles';\nimport Sidebar from './components/Sidebar';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport theme from './theme';\nimport { Box } from '@mui/material';\nimport {processNodes} from \"./helpers/nodesHelper\";\n\nconst useStyles = makeStyles(_ => ({\n  container: {\n    height: '100%',\n    width: '100%',\n  },\n  canvasContainer: {\n    height: '100%',\n    width: '100%',\n    background: '#fffff',\n  },\n}));\n\ninterface MetaDiagramProps {\n  metaNodes: MetaNode[];\n  metaLinks: MetaLink[];\n  componentsMap: ComponentsMap;\n  wrapperClassName?: string;\n  canvasClassName?: string;\n  metaTheme: {\n    customThemeVariables: {};\n    canvasClassName: string;\n  };\n}\n\nconst MetaDiagram = ({\n  metaNodes,\n  metaLinks,\n  componentsMap,\n  wrapperClassName,\n  metaTheme,\n}: MetaDiagramProps) => {\n  const classes = useStyles();\n\n  // set up the diagram engine\n  const engine = createEngine();\n\n  engine\n    .getNodeFactories()\n    // @ts-ignore\n    .registerFactory(new MetaNodeFactory(componentsMap.nodes));\n\n  engine\n    .getLinkFactories()\n    // @ts-ignore\n    .registerFactory(new MetaLinkFactory(componentsMap.links));\n\n  // set up the diagram model\n\n  const model = new DiagramModel();\n  const nodes = processNodes(metaNodes, () => console.log(\"repaint canvas\"))\n\n  const links = metaLinks\n    .map(ml => getLinkModel(ml, nodes))\n    .filter(mlm => mlm !== undefined);\n  // @ts-ignore\n  model.addAll(...nodes, ...links);\n\n  // load model into engine\n  engine.setModel(model);\n\n  const containerClassName = wrapperClassName\n    ? wrapperClassName\n    : classes.container;\n\n  return (\n    <ThemeProvider theme={createTheme(theme(metaTheme?.customThemeVariables))}>\n      <CssBaseline />\n      <Box className={containerClassName}>\n        <Sidebar />\n        <CanvasWidget\n          className={`${classes.canvasContainer} ${metaTheme?.canvasClassName}`}\n          engine={engine}\n        />\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default MetaDiagram;\nexport { MetaNode, MetaLink, MetaNodeModel, ComponentsMap };\nexport { MetaLinkModel } from './react-diagrams/MetaLinkModel';\nexport { Position } from './models/Position';\n"],"names":["ReactDiagramMetaTypes","MetaNodeModel","NodeModel","constructor","options","type","META_NODE","addPort","DefaultPortModel","in","name","MetaNode","id","shape","position","parent","set","getId","get","getParentId","getWorldPosition","add","toModel","optionsMap","Object","fromEntries","MetaLinkModel","DefaultLinkModel","META_LINK","MetaLink","sourceId","sourcePortId","targetId","targetPortId","getSourceId","getSourcePortId","getTargetId","getTargetPortId","ComponentsMap","nodesMap","linksMap","nodes","links","UnknownTypeWidget","React","MetaNodeFactory","AbstractReactFactory","componentsMap","generateModel","generateReactWidget","event","has","model","ReactComponentType","key","getOptions","engine","MetaLinkFactory","DefaultLinkFactory","generateLinkSegment","selected","path","getNode","find","n","processNodes","metaNodes","callback","metaNodeModels","mn","metaNodeModel","setPosition","x","y","push","getLinkModel","metaLink","link","source","target","setSourcePort","getPort","setTargetPort","undefined","vars","fontFamily","primaryBg","textWhite","chipTextColor","chipBgColor","chipPrimaryTextColor","chipPrimaryBgColor","breadcrumbLinkColor","breadcrumbTextColor","buttonPrimaryBgColor","buttonPrimaryBgHoverColor","buttonPrimaryDisabledBgColor","listItemActiveBg","listSelectedTextColor","listBoxShadow","listBorderColor","dividerColor","dropdownBg","dropdownTextColor","overlayColor","progressBg","progressBar","progressShadow","switchShadow","useStyles","makeStyles","root","zIndex","width","background","boxShadow","borderRadius","left","top","transform","right","padding","node","margin","borderColor","border","borderTop","display","Sidebar","classes","Box","className","List","disablePadding","component","ListItemButton","ListItemIcon","src","Buffer","Cursor","toString","alt","Move","Divider","Node","disabled","Icon","Fullscreen","applicationTheme","params","components","MuiCssBaseline","styleOverrides","MuiList","alignItems","justifyContent","marginBottom","opacity","color","marginLeft","fontWeight","fontSize","lineHeight","letterSpacing","MuiListItemIcon","minWidth","MuiListItemButton","height","backgroundColor","customVariables","Position","otherPosition","sub","_","container","canvasContainer","MetaDiagram","metaLinks","wrapperClassName","metaTheme","createEngine","getNodeFactories","registerFactory","getLinkFactories","DiagramModel","map","ml","filter","mlm","addAll","setModel","containerClassName","ThemeProvider","theme","createTheme","customThemeVariables","CssBaseline","CanvasWidget","canvasClassName"],"mappings":"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"}