{"version":3,"file":"meta-diagram.esm.js","sources":["../src/constants.ts","../src/models/Position.ts","../src/react-diagrams/MetaNodeModel.ts","../src/models/MetaNode.ts","../src/react-diagrams/MetaLinkModel.ts","../src/models/MetaLink.ts","../src/models/ComponentsMap.ts","../src/components/UnknownTypeWidget.tsx","../src/react-diagrams/MetaNodeFactory.tsx","../src/react-diagrams/MetaLinkFactory.tsx","../src/helpers/linksHelper.ts","../src/components/assets/styles/variables.ts","../src/components/Sidebar.tsx","../src/theme.ts","../src/models/Exceptions.ts","../src/models/BoundingBox.ts","../src/models/MetaGraph.ts","../src/helpers/nodesHelper.ts","../src/index.tsx"],"sourcesContent":["export enum ReactDiagramMetaTypes {\n  META_NODE = 'meta-node-type',\n  META_LINK = 'meta-link-type',\n}\n","export class Position {\n\n  private _x: number;\n  private _y: number;\n\n  constructor(x: number, y: number) {\n    this._x = x;\n    this._y = y;\n  }\n\n  // @ts-ignore\n  get x(): number {\n    return this._x;\n  }\n\n  // @ts-ignore\n  set x(value: number) {\n    this._x = value;\n  }\n\n  // @ts-ignore\n  get y(): number {\n    return this._y;\n  }\n\n  // @ts-ignore\n  set y(value: number) {\n    this._y = value;\n  }\n\n  add(otherPosition: Position) : Position {\n    return new Position(this._x+ otherPosition._x, this._y + otherPosition._y)\n  }\n\n  sub(otherPosition: Position) : Position {\n    return new Position(this._x - otherPosition._x, this._y - otherPosition._y)\n  }\n\n}\n","import {DefaultPortModel, NodeModel} from '@projectstorm/react-diagrams';\nimport {ReactDiagramMetaTypes} from '../constants';\nimport {Position} from \"../models/Position\";\n\nexport class MetaNodeModel extends NodeModel {\n    constructor(options = {}) {\n        super({\n            ...options,\n            type: ReactDiagramMetaTypes.META_NODE,\n        });\n\n        // set up an in and out port\n\n        this.addPort(\n            new DefaultPortModel({\n                in: true,\n                name: 'in',\n            })\n        );\n        this.addPort(\n            new DefaultPortModel({\n                in: false,\n                name: 'out',\n            })\n        );\n    }\n\n\n    getGraphPath(): string[]{\n        // @ts-ignore\n        return [...this.getOptions()['graphPath']]\n    }\n\n    getLocalPosition(): Position{\n\n        // @ts-ignore\n        return this.getOptions()['localPosition']\n    }\n\n    // TODO: Change to consider mouse position; Currently considering top left corner\n    isInsideParent(parent: MetaNodeModel | undefined): boolean {\n        return parent ? parent.getBoundingBox().containsPoint(this.getPosition()) : true\n    }\n\n    private calculateLocalPosition(parent: MetaNodeModel | undefined): Position {\n        const worldPosition = new Position(this.getX(), this.getY())\n        const parentWorldPosition = parent ? new Position(parent.getX(), parent.getY()): new Position(0,0)\n        return worldPosition.sub(parentWorldPosition)\n    }\n\n    updateLocalPosition(parent: MetaNodeModel | undefined): void {\n        // @ts-ignore\n        this.options['localPosition'] =  this.calculateLocalPosition(parent)\n    }\n\n    setContainerBoundingBox(containerBoundingBox: {left: number, top: number, right: number, bottom: number}): void {\n        // @ts-ignore\n        this.options['containerBoundingBox'] =  containerBoundingBox\n    }\n\n\n}\n","import { Position } from './Position';\nimport {MetaNodeModel} from \"../react-diagrams/MetaNodeModel\";\n\nexport class MetaNode {\n  private readonly parent: MetaNode | undefined;\n  private readonly position: Position;\n  private readonly options: Map<string, any>;\n\n  constructor(\n    id: string,\n    name: string,\n    shape: string,\n    position: Position,\n    parent: MetaNode | undefined,\n    options: Map<string, any>\n  ) {\n    this.parent = parent\n    this.position = position\n    this.options = new Map(options)\n    this.options.set('id', id);\n    this.options.set('name', name);\n    this.options.set('shape', shape);\n  }\n\n  private getId() : string{\n    return this.options.get('id')\n  }\n\n  private getGraphPath() : string[] {\n    if(this.parent){\n      const graphPath = this.parent.getGraphPath()\n      graphPath.push(<string>this.getId())\n      return graphPath\n    }\n    return [this.getId()]\n  }\n\n  private getWorldPosition() : Position {\n    return this.parent ? this.position.add(this.parent?.getWorldPosition()) : this.position\n  }\n\n  getDepth() : number {\n    return this.parent ? this.parent.getDepth()+1 : 0\n  }\n\n  toModel() : MetaNodeModel {\n    const optionsMap = new Map(this.options)\n    optionsMap.set('graphPath', this.getGraphPath())\n    optionsMap.set('localPosition', this.position)\n    optionsMap.set('depth', this.getDepth())\n    const metaNodeModel =  new MetaNodeModel(Object.fromEntries(optionsMap))\n    const worldPosition = this.getWorldPosition()\n    metaNodeModel.setPosition(worldPosition.x, worldPosition.y)\n    return metaNodeModel\n  }\n\n}\n","import { DefaultLinkModel } from '@projectstorm/react-diagrams';\nimport { ReactDiagramMetaTypes } from '../constants';\n\nexport class MetaLinkModel extends DefaultLinkModel {\n  constructor(options = {}) {\n    super({\n      ...options,\n      type: ReactDiagramMetaTypes.META_LINK,\n    });\n  }\n}\n","import { ILink } from './ILink';\nimport {MetaLinkModel} from \"../react-diagrams/MetaLinkModel\";\n\nexport class MetaLink implements ILink {\n  sourceId: string;\n  sourcePortId: string;\n  targetId: string;\n  targetPortId: string;\n  options: Map<string, any>;\n\n  constructor(\n    id: string,\n    name: string,\n    shape: string,\n    sourceId: string,\n    sourcePortId: string,\n    targetId: string,\n    targetPortId: string,\n    options: Map<string, any>\n  ) {\n    this.sourceId = sourceId;\n    this.sourcePortId = sourcePortId;\n    this.targetId = targetId;\n    this.targetPortId = targetPortId;\n    this.options = options;\n    this.options.set('id', id);\n    this.options.set('name', name);\n    this.options.set('shape', shape);\n  }\n\n  getSourceId(): string {\n    return this.sourceId;\n  }\n\n  getSourcePortId(): string {\n    return this.sourcePortId;\n  }\n\n  getTargetId(): string {\n    return this.targetId;\n  }\n\n  getTargetPortId(): string {\n    return this.targetPortId;\n  }\n\n  toModel(): MetaLinkModel {\n    return new MetaLinkModel(Object.fromEntries(this.options))\n  }\n}\n","import React from 'react';\n\nexport class ComponentsMap {\n  nodes: Map<string, React.ComponentType>;\n  links: Map<string, React.ComponentType>;\n\n  constructor(\n    nodesMap: Map<string, React.ComponentType>,\n    linksMap: Map<string, React.ComponentType>\n  ) {\n    this.nodes = nodesMap;\n    this.links = linksMap;\n  }\n}\n","import React from 'react';\n\nexport const UnknownTypeWidget = () => {\n  return <div>Unknown Type</div>;\n};\n","import { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { MetaNodeModel } from './MetaNodeModel';\nimport { UnknownTypeWidget } from '../components/UnknownTypeWidget';\nimport React from 'react';\nimport { ReactDiagramMetaTypes } from '../constants';\n\nexport class MetaNodeFactory extends AbstractReactFactory {\n  componentsMap: Map<string, React.ComponentType>;\n\n  constructor(componentsMap: Map<string, React.ComponentType>) {\n    super(ReactDiagramMetaTypes.META_NODE);\n    this.componentsMap = componentsMap;\n  }\n\n  generateModel() {\n    return new MetaNodeModel();\n  }\n\n  generateReactWidget(event: any): JSX.Element {\n    if (this.componentsMap.has(event.model.options.shape)) {\n      const ReactComponentType = this.componentsMap.get(\n        event.model.options.shape\n      );\n      return (\n        // @ts-ignore\n        <ReactComponentType\n          key={`node-factory-${event.model.getOptions().id}`}\n          engine={this.engine}\n          model={event.model}\n        />\n      );\n    }\n    // TODO: Generate default node instead\n    return <UnknownTypeWidget />;\n  }\n}\n","import { MetaLinkModel } from './MetaLinkModel';\nimport { UnknownTypeWidget } from '../components/UnknownTypeWidget';\nimport { ReactDiagramMetaTypes } from '../constants';\nimport React from 'react';\nimport { DefaultLinkFactory } from '@projectstorm/react-diagrams';\n\nexport class MetaLinkFactory extends DefaultLinkFactory {\n  componentsMap: Map<string, JSX.Element>;\n\n  constructor(componentsMap: Map<string, JSX.Element>) {\n    super(ReactDiagramMetaTypes.META_LINK);\n    this.componentsMap = componentsMap;\n  }\n\n  generateModel() {\n    return new MetaLinkModel();\n  }\n\n  generateLinkSegment(\n    model: MetaLinkModel,\n    selected: boolean,\n    path: string\n  ): JSX.Element {\n    // @ts-ignore\n    if (this.componentsMap.has(model.getOptions()?.shape)) {\n      const ReactComponentType = this.componentsMap.get(\n        // @ts-ignore\n        model.getOptions().shape\n      );\n\n      return (\n        // @ts-ignore\n        <ReactComponentType\n          key={`link-factory-${model.getOptions().id}`}\n          engine={this.engine}\n          model={model}\n          path={path}\n          selected={selected}\n        />\n      );\n    }\n    // TODO: Generate default link instead\n    return <UnknownTypeWidget />;\n  }\n}\n","import { MetaLink } from '../models/MetaLink';\nimport { MetaLinkModel } from '../react-diagrams/MetaLinkModel';\nimport {MetaGraph} from \"../models/MetaGraph\";\n\nexport function getLinkModel(\n  metaLink: MetaLink,\n  metaGraph: MetaGraph\n): MetaLinkModel | undefined {\n  const link = metaLink.toModel();\n  const source = metaGraph.getNodeDFS(metaLink.getSourceId());\n  const target = metaGraph.getNodeDFS(metaLink.getTargetId());\n  if (source && target) {\n    link.setSourcePort(source.getPort(metaLink.getSourcePortId()));\n    link.setTargetPort(target.getPort(metaLink.getTargetPortId()));\n    return link;\n  }\n  return undefined;\n}\n","const vars = {\n  fontFamily: 'Inter, sans-serif',\n  primaryBg: '#f1f1f1',\n  textWhite: '#FFFFFF',\n  chipTextColor: '#F2F2F7',\n  chipBgColor: 'rgba(60, 60, 67, 0.4)',\n\n  chipPrimaryTextColor: 'rgba(255, 255, 255, 0.8)',\n  chipPrimaryBgColor: 'rgba(0, 122, 255, 0.6)',\n\n  breadcrumbLinkColor: '#A2A2A2',\n  breadcrumbTextColor: '#292929',\n\n  buttonPrimaryBgColor: '4353FF',\n  buttonPrimaryBgHoverColor: '#3443E1',\n  buttonPrimaryDisabledBgColor: 'rgba(0, 122, 255, 0.4)',\n\n  listItemActiveBg: '#007AFF',\n  listSelectedTextColor: '#3C3C43',\n  listBoxShadow:\n    '0 0.1875rem 0.5rem rgba(0, 0, 0, 0.12), 0 0.1875rem 0.0625rem rgba(0, 0, 0, 0.04)',\n  listBorderColor: 'rgba(0, 0, 0, 0.04)',\n\n  dividerColor: 'rgba(118, 120, 125, 0.12)',\n\n  dropdownBg: 'rgba(246, 246, 248, 0.8)',\n  dropdownTextColor: 'rgba(60, 60, 67, 0.6)',\n\n  overlayColor: 'rgba(0, 0, 0, 0.4)',\n\n  progressBg: '#E5E5E5',\n  progressBar: '#017AFF',\n  progressShadow: 'inset 0 0 0.0625rem #E3E3E3',\n\n  switchShadow:\n    '0 0.1875rem 0.5rem rgba(0, 0, 0, 0.15), 0 0.1875rem 0.0625rem rgba(0, 0, 0, 0.06)',\n};\n\nexport default vars;\n","import React from 'react';\nimport { Box } from '@mui/system';\nimport { makeStyles } from '@mui/styles';\nimport vars from './assets/styles/variables';\nimport { Divider, List, ListItemButton, ListItemIcon } from '@mui/material';\nimport Move from './assets/svg/move.svg';\nimport Icon from './assets/svg/icon.svg';\nimport Node from './assets/svg/node.svg';\nimport Cursor from './assets/svg/cursor.svg';\nimport Fullscreen from './assets/svg/fullscreen.svg';\n\nconst { textWhite, dividerColor } = vars;\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    zIndex: '5',\n    width: '4rem',\n    background: textWhite,\n    boxShadow:\n      '0 0 3.75rem rgba(0, 0, 0, 0.1), 0 0.5rem 2.5rem -0.625rem rgba(0, 0, 0, 0.1)',\n    borderRadius: '2rem',\n    position: 'fixed',\n    left: '1rem',\n    top: '50%',\n    transform: 'translateY(-50%)',\n\n    '&.right': {\n      left: 'auto',\n      right: '1rem',\n    },\n\n    '& .MuiList-root': {\n      padding: '0.75rem',\n    },\n  },\n\n  node: {\n    margin: '0.25rem 0',\n    '& .MuiDivider-root': {\n      borderColor: dividerColor,\n      width: 'calc(100% - 1.5rem)',\n      margin: '0 auto',\n      border: 'none',\n      borderTop: '0.0625rem solid',\n    },\n\n    '& img': {\n      display: 'block',\n      margin: '1rem 0',\n    },\n  },\n}));\n\nconst Sidebar = () => {\n  const classes = useStyles();\n  return (\n    <Box className={`${classes.root} left`}>\n      <List disablePadding component=\"nav\">\n        <ListItemButton selected>\n          <ListItemIcon>\n            <img\n              src={`data:image/svg+xml;base64,${new Buffer(Cursor).toString(\n                'base64'\n              )}`}\n              alt=\"icon\"\n            />\n          </ListItemIcon>\n        </ListItemButton>\n\n        <ListItemButton>\n          <ListItemIcon>\n            <img\n              src={`data:image/svg+xml;base64,${new Buffer(Move).toString(\n                'base64'\n              )}`}\n              alt=\"move\"\n            />\n          </ListItemIcon>\n        </ListItemButton>\n      </List>\n\n      <Box className={classes.node}>\n        <Divider />\n        <img\n          src={`data:image/svg+xml;base64,${new Buffer(Node).toString(\n            'base64'\n          )}`}\n          alt=\"node\"\n        />\n        <Divider />\n      </Box>\n\n      <List disablePadding component=\"nav\">\n        <ListItemButton disabled>\n          <ListItemIcon>\n            <img\n              src={`data:image/svg+xml;base64,${new Buffer(Icon).toString(\n                'base64'\n              )}`}\n              alt=\"icon\"\n            />\n          </ListItemIcon>\n        </ListItemButton>\n\n        <ListItemButton>\n          <ListItemIcon>\n            <img\n              src={`data:image/svg+xml;base64,${new Buffer(Fullscreen).toString(\n                'base64'\n              )}`}\n              alt=\"fullscreen\"\n            />\n          </ListItemIcon>\n        </ListItemButton>\n      </List>\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","import vars from './components/assets/styles/variables';\n\ntype ThemeVars = {\n  [key: string]: any;\n};\n\nconst applicationTheme = (params: ThemeVars) => {\n  const {\n    primaryBg,\n    fontFamily,\n    chipTextColor,\n    chipBgColor,\n    textWhite,\n    listItemActiveBg,\n    listSelectedTextColor,\n    listBoxShadow,\n    listBorderColor,\n  } = params;\n  return {\n    components: {\n      MuiCssBaseline: {\n        styleOverrides: `\n          html {\n            background: ${primaryBg};\n            font-family: ${fontFamily};\n          }\n          body {\n            background-color:${primaryBg};\n            font-family: ${fontFamily};\n            font-size: 1rem;\n          }\n        `,\n      },\n      MuiList: {\n        styleOverrides: {\n          root: {\n            '&.customSwitch': {\n              padding: '0.125rem',\n              background: chipTextColor,\n              borderRadius: '0.5rem',\n              display: 'flex',\n              '& .MuiListItemButton-root': {\n                padding: '0.25rem 0.75rem',\n                borderRadius: '0.4375rem',\n                width: '10.59375rem',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                '&:not(:last-child)': {\n                  marginBottom: '0',\n                },\n                '&.Mui-disabled': {\n                  opacity: 1,\n                },\n                '&.Mui-selected': {\n                  background: textWhite,\n                  boxShadow: listBoxShadow,\n                  border: `0.03125rem solid ${listBorderColor}`,\n                  '& .MuiTypography-root': {\n                    color: listSelectedTextColor,\n                  },\n                },\n              },\n              '& .MuiChip-root': {\n                marginLeft: '0.25rem',\n              },\n              '& .MuiTypography-root': {\n                fontWeight: 500,\n                fontSize: '0.8125rem',\n                lineHeight: '1.25rem',\n                letterSpacing: '-0.005rem',\n                color: chipBgColor,\n                margin: 0,\n              },\n            },\n          },\n        },\n      },\n      MuiListItemIcon: {\n        styleOverrides: {\n          root: {\n            minWidth: 'inherit',\n          },\n        },\n      },\n      MuiListItemButton: {\n        styleOverrides: {\n          root: {\n            padding: 0,\n            width: '2.5rem',\n            height: '2.5rem',\n            borderRadius: '50%',\n            justifyContent: 'center',\n            backgroundColor: chipTextColor,\n            '&:hover': {\n              backgroundColor: chipTextColor,\n            },\n            '&:not(:last-child)': {\n              marginBottom: '0.75rem',\n            },\n            '&.Mui-selected': {\n              backgroundColor: listItemActiveBg,\n              '&:hover': {\n                backgroundColor: listItemActiveBg,\n              },\n            },\n            '&.Mui-disabled': {\n              opacity: 0.8,\n            },\n          },\n        },\n      },\n    },\n  };\n};\n\nexport default (customVariables: ThemeVars) =>\n  applicationTheme({\n    ...vars,\n    ...customVariables,\n  });\n","export class UnknownParent extends Error {\n    constructor(id: string | undefined) {\n        const msg = `Root with id ${id} not found`\n        super(msg);\n        Object.setPrototypeOf(this, UnknownParent.prototype);\n    }\n}","//TODO: Not needed. Use react-diagrams rectangle instead\n\n\nexport class BoundingBox {\n    private _left: number\n    private _top: number\n    private _right: number\n    private _bottom: number\n\n    constructor(left: number, top: number, right: number, bottom: number) {\n        this._left = left;\n        this._top = top;\n        this._right = right;\n        this._bottom = bottom;\n    }\n\n\n    // @ts-ignore\n    get left(): number {\n        return this._left;\n    }\n    // @ts-ignore\n    set left(value: number) {\n        this._left = value;\n    }\n    // @ts-ignore\n    get top(): number {\n        return this._top;\n    }\n\n    // @ts-ignore\n    set top(value: number) {\n        this._top = value;\n    }\n\n    // @ts-ignore\n    get right(): number {\n        return this._right;\n    }\n\n    // @ts-ignore\n    set right(value: number) {\n        this._right = value;\n    }\n\n    // @ts-ignore\n    get bottom(): number {\n        return this._bottom;\n    }\n\n    // @ts-ignore\n    set bottom(value: number) {\n        this._bottom = value;\n    }\n\n    getWidth() : number {\n        return this._right - this._left\n    }\n\n    getHeight() : number {\n        return this._top - this._bottom\n    }\n}","import {MetaNodeModel} from \"../react-diagrams/MetaNodeModel\";\nimport { UnknownParent } from \"./Exceptions\";\nimport {BoundingBox} from \"./BoundingBox\";\n\nclass Graph {\n    private readonly node: MetaNodeModel;\n    private readonly children: Map<string, Graph>;\n\n    constructor(metaNodeModel: MetaNodeModel) {\n        this.node = metaNodeModel;\n        this.children = new Map<string, Graph>()\n    }\n\n    getID() : string{\n        return this.node.getID()\n    }\n\n    getNode() : MetaNodeModel{\n        return this.node\n    }\n\n    getChild(id:string) {\n        return this.children.get(id)\n    }\n\n    addChild(graph: Graph) : void {\n        this.children.set(graph.getID(), graph)\n    }\n\n    getChildren(): MetaNodeModel[] {\n        return Array.from(this.children.values()).map(g => g.getNode())\n    }\n\n    getDescendancy(): MetaNodeModel[] {\n        const descendancy = this.getChildren()\n        for(const graph of Array.from(this.children.values())){\n            descendancy.push(...graph.getDescendancy())\n        }\n        return descendancy\n    }\n\n    dfs(id: string): MetaNodeModel | boolean {\n        if(this.getID() == id){\n            return this.node\n        }\n        for (let node of Array.from(this.children.values())) {\n            const found = node.dfs(id)\n            if(found){\n                return found\n            }\n        }\n        return false\n    }\n\n    getContainerBoundingBox() : BoundingBox {\n        // TODO: Refactor to use this.node.getBoundingBox()\n        let width = this.getNode().width\n        let height = this.getNode().height\n        let x = this.getNode().getX()\n        let y = this.getNode().getY()\n        let left = x - width / 2\n        let right = x + width / 2\n        let top = y + height / 2\n        let bottom = y - height / 2\n        for (let child of Array.from(this.children.values())) {\n            const childBox = child.getContainerBoundingBox()\n            if(childBox.left < left){\n                left = childBox.left\n            }if(childBox.right > right){\n                right = childBox.right\n            }if(childBox.top > top){\n                top = childBox.top\n            }if(childBox.bottom < bottom){\n                bottom = childBox.bottom\n            }\n        }\n        const bb = new BoundingBox(left, top, right, bottom)\n        // console.log(bb)\n        return bb\n    }\n\n}\n\n\nexport class MetaGraph {\n    private readonly roots: Map<string, Graph>;\n\n    constructor() {\n        this.roots = new Map<string, Graph>()\n    }\n\n    addNode(metaNodeModel:MetaNodeModel): void {\n        const path = metaNodeModel.getGraphPath()\n        if(path.length == 1){\n            this.roots.set(metaNodeModel.getID(), new Graph(metaNodeModel))\n        }else{\n            path.pop() // Removes own id from path\n            const parentGraph = this.findNodeGraph(path)\n            parentGraph.addChild(new Graph(metaNodeModel))\n        }\n    }\n\n\n    getNodes() : MetaNodeModel[] {\n        const nodes = []\n        for(const graph of Array.from(this.roots.values())){\n            nodes.push(graph.getNode())\n            nodes.push(...graph.getDescendancy())\n        }\n        return nodes\n    }\n\n    getAncestors(node : MetaNodeModel): MetaNodeModel[] {\n        const path = node.getGraphPath()\n        const oldestAncestor = this.getRoot(path[0])\n        return [oldestAncestor.getNode(), ...oldestAncestor.getChildren()]\n    }\n\n    getRoot(rootId: string) : Graph{\n        const root = this.roots.get(rootId)\n        if(root===undefined){\n            throw new UnknownParent(rootId)\n        }\n        return root\n    }\n\n    getChildren(parent : MetaNodeModel): MetaNodeModel[] {\n        const path = parent.getGraphPath()\n        if (path.length == 1) {\n            const root = this.getRoot(parent.getID())\n            return root.getChildren()\n        } else {\n            const graph = this.findNodeGraph(path)\n            return graph.getChildren()\n        }\n    }\n\n    getParent(node : MetaNodeModel): MetaNodeModel | undefined {\n        const path = node.getGraphPath()\n        if (path.length == 1) {\n           return undefined\n        } else {\n            path.pop() // removes own id from path\n            const parentGraph = this.findNodeGraph(path)\n            return parentGraph.getNode()\n        }\n    }\n\n    getNodeDFS(nodeId: string): MetaNodeModel | undefined {\n        for (let root of Array.from(this.roots.values())) {\n            const found = root.dfs(nodeId)\n            if(found){\n                // @ts-ignore\n                return found\n            }\n        }\n        return undefined\n    }\n\n    getNodeContainerBoundingBox(node: MetaNodeModel) : BoundingBox {\n        const graph = this.findNodeGraph(node.getGraphPath())\n        return graph.getContainerBoundingBox()\n    }\n\n    private findNodeGraph(path: string[]) : Graph {\n        const rootId = path.shift()\n        // @ts-ignore\n        let parent = this.getRoot(rootId)\n        while(path.length > 0){\n            const next = path.shift()\n            // @ts-ignore\n            parent = parent.getChild(next)\n            if (parent == undefined){\n                throw new UnknownParent(next)\n            }\n        }\n        return parent\n    }\n\n    handleNodePositionChanged(metaNodeModel: MetaNodeModel){\n        // TODO: Update node parent (add or remove parent)\n                //  update node graph path,\n        //  bounding boxes of parents\n\n        // Update children position (children should move the same delta as node)\n        this.updateChildrenPosition(metaNodeModel)\n        //  Update local position / relative position to the parent\n        this.updateNodeLocalPosition(metaNodeModel)\n    }\n\n    private updateChildrenPosition(metaNodeModel: MetaNodeModel){\n        const children = this.getChildren(metaNodeModel);\n\n        children.forEach(n => {\n            /*\n                No need to explicitly call updateChildrenPosition for n children because it will happen automatically in\n                the event listener\n             */\n            // @ts-ignore\n            const localPosition = n.getLocalPosition()\n            n.setPosition(metaNodeModel.getX() + localPosition.x, metaNodeModel.getY() + localPosition.y)\n\n        })\n    }\n\n    private updateNodeLocalPosition(metaNodeModel: MetaNodeModel){\n        const parent = this.getParent(metaNodeModel)\n        metaNodeModel.updateLocalPosition(parent)\n    }\n\n    updateNodesContainerBoundingBoxes(nodes: MetaNodeModel[]): void {\n        nodes.forEach(n => n.setContainerBoundingBox(this.getNodeContainerBoundingBox(n)))\n    }\n}\n\n","import {MetaNode} from \"../models/MetaNode\";\nimport {BaseEntityEvent} from \"@projectstorm/react-canvas-core\";\nimport {NodeModel, NodeModelGenerics} from \"@projectstorm/react-diagrams\";\nimport {MetaGraph} from \"../models/MetaGraph\";\nimport {MetaNodeModel} from \"../react-diagrams/MetaNodeModel\";\n\n\nexport function generateMetaGraph(metaNodes: MetaNode[]) : MetaGraph {\n  const metaGraph = new MetaGraph()\n  metaNodes.sort(function(a, b) {\n    return a.getDepth() - b.getDepth();\n  });\n\n  for(const mn of metaNodes){\n\n    const metaNodeModel = mn.toModel()\n\n    metaGraph.addNode(metaNodeModel)\n  }\n  return metaGraph\n}\n\nexport function registerPositionListener(metaNodeModels: MetaNodeModel[], callback: { (event: any): void; (arg0: BaseEntityEvent<NodeModel<NodeModelGenerics>>): void; }){\n  // @ts-ignore\n  metaNodeModels.forEach(metaNodeModel => metaNodeModel.registerListener({positionChanged: (event => callback(event))}))\n}\n\n","import * as React from 'react';\nimport { MetaNode } from './models/MetaNode';\nimport { MetaLink } from './models/MetaLink';\nimport { ComponentsMap } from './models/ComponentsMap';\nimport createEngine, { DiagramModel } from '@projectstorm/react-diagrams';\nimport { MetaNodeFactory } from './react-diagrams/MetaNodeFactory';\nimport { MetaLinkFactory } from './react-diagrams/MetaLinkFactory';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport { MetaNodeModel } from './react-diagrams/MetaNodeModel';\nimport { getLinkModel } from './helpers/linksHelper';\nimport { makeStyles } from '@mui/styles';\nimport Sidebar from './components/Sidebar';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport theme from './theme';\nimport { Box } from '@mui/material';\nimport {generateMetaGraph, registerPositionListener} from \"./helpers/nodesHelper\";\nimport {useEffect} from \"react\";\n\nconst useStyles = makeStyles(_ => ({\n  container: {\n    height: '100%',\n    width: '100%',\n  },\n  canvasContainer: {\n    height: '100%',\n    width: '100%',\n    background: '#fffff',\n  },\n}));\n\ninterface MetaDiagramProps {\n  metaNodes: MetaNode[];\n  metaLinks: MetaLink[];\n  componentsMap: ComponentsMap;\n  wrapperClassName?: string;\n  canvasClassName?: string;\n  metaTheme: {\n    customThemeVariables: {};\n    canvasClassName: string;\n  };\n}\n\nconst MetaDiagram = ({\n  metaNodes,\n  metaLinks,\n  componentsMap,\n  wrapperClassName,\n  metaTheme,\n}: MetaDiagramProps) => {\n  const classes = useStyles();\n\n  // set up the diagram engine\n  const engine = createEngine();\n\n  engine\n    .getNodeFactories()\n    // @ts-ignore\n    .registerFactory(new MetaNodeFactory(componentsMap.nodes));\n\n  engine\n    .getLinkFactories()\n    // @ts-ignore\n    .registerFactory(new MetaLinkFactory(componentsMap.links));\n\n  const metaGraph = generateMetaGraph(metaNodes)\n\n  const repaintCanvas = (event: any) => {\n    const node = event.entity\n    metaGraph.handleNodePositionChanged(node)\n    // TODO: Add call application OnDiagramChange callback\n    // TODO: We might not need the full canvas to be repainted\n    engine.repaintCanvas();\n  }\n\n\n  // set up the diagram model\n\n  const model = new DiagramModel();\n\n  const nodes = metaGraph.getNodes()\n  registerPositionListener(nodes, repaintCanvas)\n\n  const links = metaLinks\n    .map(ml => getLinkModel(ml, metaGraph))\n    .filter(mlm => mlm !== undefined);\n\n  // @ts-ignore\n  model.addAll(...nodes, ...links);\n\n  // load model into engine\n  engine.setModel(model);\n\n  // TODO: Update metagraph on prop changes\n  // We can start by generating a completely new graph\n  // Later on we can optimize to detect what changed\n\n  useEffect(() => {\n    // @ts-ignore\n    metaGraph.updateNodesContainerBoundingBoxes(model.getNodes(), metaGraph)\n  }, [])\n\n\n  const containerClassName = wrapperClassName\n    ? wrapperClassName\n    : classes.container;\n\n  return (\n    <ThemeProvider theme={createTheme(theme(metaTheme?.customThemeVariables))}>\n      <CssBaseline />\n      <Box className={containerClassName}>\n        <Sidebar />\n        <CanvasWidget\n          className={`${classes.canvasContainer} ${metaTheme?.canvasClassName}`}\n          engine={engine}\n        />\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default MetaDiagram;\nexport { MetaNode, MetaLink, MetaNodeModel, ComponentsMap };\nexport { MetaLinkModel } from './react-diagrams/MetaLinkModel';\nexport { Position } from './models/Position';\n"],"names":["ReactDiagramMetaTypes","Position","constructor","x","y","_x","_y","value","add","otherPosition","sub","MetaNodeModel","NodeModel","options","type","META_NODE","addPort","DefaultPortModel","in","name","getGraphPath","getOptions","getLocalPosition","isInsideParent","parent","getBoundingBox","containsPoint","getPosition","calculateLocalPosition","worldPosition","getX","getY","parentWorldPosition","updateLocalPosition","setContainerBoundingBox","containerBoundingBox","MetaNode","id","shape","position","Map","set","getId","get","graphPath","push","getWorldPosition","getDepth","toModel","optionsMap","metaNodeModel","Object","fromEntries","setPosition","MetaLinkModel","DefaultLinkModel","META_LINK","MetaLink","sourceId","sourcePortId","targetId","targetPortId","getSourceId","getSourcePortId","getTargetId","getTargetPortId","ComponentsMap","nodesMap","linksMap","nodes","links","UnknownTypeWidget","React","MetaNodeFactory","AbstractReactFactory","componentsMap","generateModel","generateReactWidget","event","has","model","ReactComponentType","key","engine","MetaLinkFactory","DefaultLinkFactory","generateLinkSegment","selected","path","getLinkModel","metaLink","metaGraph","link","source","getNodeDFS","target","setSourcePort","getPort","setTargetPort","undefined","vars","fontFamily","primaryBg","textWhite","chipTextColor","chipBgColor","chipPrimaryTextColor","chipPrimaryBgColor","breadcrumbLinkColor","breadcrumbTextColor","buttonPrimaryBgColor","buttonPrimaryBgHoverColor","buttonPrimaryDisabledBgColor","listItemActiveBg","listSelectedTextColor","listBoxShadow","listBorderColor","dividerColor","dropdownBg","dropdownTextColor","overlayColor","progressBg","progressBar","progressShadow","switchShadow","useStyles","makeStyles","root","zIndex","width","background","boxShadow","borderRadius","left","top","transform","right","padding","node","margin","borderColor","border","borderTop","display","Sidebar","classes","Box","className","List","disablePadding","component","ListItemButton","ListItemIcon","src","Buffer","Cursor","toString","alt","Move","Divider","Node","disabled","Icon","Fullscreen","applicationTheme","params","components","MuiCssBaseline","styleOverrides","MuiList","alignItems","justifyContent","marginBottom","opacity","color","marginLeft","fontWeight","fontSize","lineHeight","letterSpacing","MuiListItemIcon","minWidth","MuiListItemButton","height","backgroundColor","customVariables","UnknownParent","Error","msg","setPrototypeOf","prototype","BoundingBox","bottom","_left","_top","_right","_bottom","getWidth","getHeight","Graph","children","getID","getNode","getChild","addChild","graph","getChildren","Array","from","values","map","g","getDescendancy","descendancy","dfs","found","getContainerBoundingBox","child","childBox","bb","MetaGraph","roots","addNode","length","pop","parentGraph","findNodeGraph","getNodes","getAncestors","oldestAncestor","getRoot","rootId","getParent","nodeId","getNodeContainerBoundingBox","shift","next","handleNodePositionChanged","updateChildrenPosition","updateNodeLocalPosition","forEach","n","localPosition","updateNodesContainerBoundingBoxes","generateMetaGraph","metaNodes","sort","a","b","mn","registerPositionListener","metaNodeModels","callback","registerListener","positionChanged","_","container","canvasContainer","MetaDiagram","metaLinks","wrapperClassName","metaTheme","createEngine","getNodeFactories","registerFactory","getLinkFactories","repaintCanvas","entity","DiagramModel","ml","filter","mlm","addAll","setModel","useEffect","containerClassName","ThemeProvider","theme","createTheme","customThemeVariables","CssBaseline","CanvasWidget","canvasClassName"],"mappings":";;;;;;;;;AAAA,IAAYA,qBAAZ;;AAAA,WAAYA;EACVA,kCAAA,mBAAA;EACAA,kCAAA,mBAAA;AACD,CAHD,EAAYA,qBAAqB,KAArBA,qBAAqB,KAAA,CAAjC;;MCAaC;EAKXC,YAAYC,GAAWC;IACrB,KAAKC,EAAL,GAAUF,CAAV;IACA,KAAKG,EAAL,GAAUF,CAAV;;;;EAIG,IAADD,CAAC;IACH,OAAO,KAAKE,EAAZ;;;;EAIG,IAADF,CAAC,CAACI,KAAD;IACH,KAAKF,EAAL,GAAUE,KAAV;;;;EAIG,IAADH,CAAC;IACH,OAAO,KAAKE,EAAZ;;;;EAIG,IAADF,CAAC,CAACG,KAAD;IACH,KAAKD,EAAL,GAAUC,KAAV;;;EAGFC,GAAG,CAACC,aAAD;IACD,OAAO,IAAIR,QAAJ,CAAa,KAAKI,EAAL,GAASI,aAAa,CAACJ,EAApC,EAAwC,KAAKC,EAAL,GAAUG,aAAa,CAACH,EAAhE,CAAP;;;EAGFI,GAAG,CAACD,aAAD;IACD,OAAO,IAAIR,QAAJ,CAAa,KAAKI,EAAL,GAAUI,aAAa,CAACJ,EAArC,EAAyC,KAAKC,EAAL,GAAUG,aAAa,CAACH,EAAjE,CAAP;;;;;MC/BSK,sBAAsBC;EAC/BV,YAAYW,OAAO,GAAG;IAClB,MAAM,EACF,GAAGA,OADD;MAEFC,IAAI,EAAEd,qBAAqB,CAACe;KAFhC;;IAOA,KAAKC,OAAL,CACI,IAAIC,gBAAJ,CAAqB;MACjBC,EAAE,EAAE,IADa;MAEjBC,IAAI,EAAE;KAFV,CADJ;IAMA,KAAKH,OAAL,CACI,IAAIC,gBAAJ,CAAqB;MACjBC,EAAE,EAAE,KADa;MAEjBC,IAAI,EAAE;KAFV,CADJ;;;EASJC,YAAY;;IAER,OAAO,CAAC,GAAG,KAAKC,UAAL,GAAkB,WAAlB,CAAJ,CAAP;;;EAGJC,gBAAgB;;IAGZ,OAAO,KAAKD,UAAL,GAAkB,eAAlB,CAAP;;;;EAIJE,cAAc,CAACC,MAAD;IACV,OAAOA,MAAM,GAAGA,MAAM,CAACC,cAAP,GAAwBC,aAAxB,CAAsC,KAAKC,WAAL,EAAtC,CAAH,GAA+D,IAA5E;;;EAGIC,sBAAsB,CAACJ,MAAD;IAC1B,MAAMK,aAAa,GAAG,IAAI5B,QAAJ,CAAa,KAAK6B,IAAL,EAAb,EAA0B,KAAKC,IAAL,EAA1B,CAAtB;IACA,MAAMC,mBAAmB,GAAGR,MAAM,GAAG,IAAIvB,QAAJ,CAAauB,MAAM,CAACM,IAAP,EAAb,EAA4BN,MAAM,CAACO,IAAP,EAA5B,CAAH,GAA+C,IAAI9B,QAAJ,CAAa,CAAb,EAAe,CAAf,CAAjF;IACA,OAAO4B,aAAa,CAACnB,GAAd,CAAkBsB,mBAAlB,CAAP;;;EAGJC,mBAAmB,CAACT,MAAD;;IAEf,KAAKX,OAAL,CAAa,eAAb,IAAiC,KAAKe,sBAAL,CAA4BJ,MAA5B,CAAjC;;;EAGJU,uBAAuB,CAACC,oBAAD;;IAEnB,KAAKtB,OAAL,CAAa,sBAAb,IAAwCsB,oBAAxC;;;;;MCtDKC;EAKXlC,YACEmC,IACAlB,MACAmB,OACAC,UACAf,QACAX;IAEA,KAAKW,MAAL,GAAcA,MAAd;IACA,KAAKe,QAAL,GAAgBA,QAAhB;IACA,KAAK1B,OAAL,GAAe,IAAI2B,GAAJ,CAAQ3B,OAAR,CAAf;IACA,KAAKA,OAAL,CAAa4B,GAAb,CAAiB,IAAjB,EAAuBJ,EAAvB;IACA,KAAKxB,OAAL,CAAa4B,GAAb,CAAiB,MAAjB,EAAyBtB,IAAzB;IACA,KAAKN,OAAL,CAAa4B,GAAb,CAAiB,OAAjB,EAA0BH,KAA1B;;;EAGMI,KAAK;IACX,OAAO,KAAK7B,OAAL,CAAa8B,GAAb,CAAiB,IAAjB,CAAP;;;EAGMvB,YAAY;IAClB,IAAG,KAAKI,MAAR,EAAe;MACb,MAAMoB,SAAS,GAAG,KAAKpB,MAAL,CAAYJ,YAAZ,EAAlB;MACAwB,SAAS,CAACC,IAAV,CAAuB,KAAKH,KAAL,EAAvB;MACA,OAAOE,SAAP;;;IAEF,OAAO,CAAC,KAAKF,KAAL,EAAD,CAAP;;;EAGMI,gBAAgB;;;IACtB,OAAO,KAAKtB,MAAL,GAAc,KAAKe,QAAL,CAAc/B,GAAd,iBAAkB,KAAKgB,MAAvB,qBAAkB,aAAasB,gBAAb,EAAlB,CAAd,GAAmE,KAAKP,QAA/E;;;EAGFQ,QAAQ;IACN,OAAO,KAAKvB,MAAL,GAAc,KAAKA,MAAL,CAAYuB,QAAZ,KAAuB,CAArC,GAAyC,CAAhD;;;EAGFC,OAAO;IACL,MAAMC,UAAU,GAAG,IAAIT,GAAJ,CAAQ,KAAK3B,OAAb,CAAnB;IACAoC,UAAU,CAACR,GAAX,CAAe,WAAf,EAA4B,KAAKrB,YAAL,EAA5B;IACA6B,UAAU,CAACR,GAAX,CAAe,eAAf,EAAgC,KAAKF,QAArC;IACAU,UAAU,CAACR,GAAX,CAAe,OAAf,EAAwB,KAAKM,QAAL,EAAxB;IACA,MAAMG,aAAa,GAAI,IAAIvC,aAAJ,CAAkBwC,MAAM,CAACC,WAAP,CAAmBH,UAAnB,CAAlB,CAAvB;IACA,MAAMpB,aAAa,GAAG,KAAKiB,gBAAL,EAAtB;IACAI,aAAa,CAACG,WAAd,CAA0BxB,aAAa,CAAC1B,CAAxC,EAA2C0B,aAAa,CAACzB,CAAzD;IACA,OAAO8C,aAAP;;;;;MClDSI,sBAAsBC;EACjCrD,YAAYW,OAAO,GAAG;IACpB,MAAM,EACJ,GAAGA,OADC;MAEJC,IAAI,EAAEd,qBAAqB,CAACwD;KAF9B;;;;;MCFSC;EAOXvD,YACEmC,IACAlB,MACAmB,OACAoB,UACAC,cACAC,UACAC,cACAhD;IAEA,KAAK6C,QAAL,GAAgBA,QAAhB;IACA,KAAKC,YAAL,GAAoBA,YAApB;IACA,KAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAKC,YAAL,GAAoBA,YAApB;IACA,KAAKhD,OAAL,GAAeA,OAAf;IACA,KAAKA,OAAL,CAAa4B,GAAb,CAAiB,IAAjB,EAAuBJ,EAAvB;IACA,KAAKxB,OAAL,CAAa4B,GAAb,CAAiB,MAAjB,EAAyBtB,IAAzB;IACA,KAAKN,OAAL,CAAa4B,GAAb,CAAiB,OAAjB,EAA0BH,KAA1B;;;EAGFwB,WAAW;IACT,OAAO,KAAKJ,QAAZ;;;EAGFK,eAAe;IACb,OAAO,KAAKJ,YAAZ;;;EAGFK,WAAW;IACT,OAAO,KAAKJ,QAAZ;;;EAGFK,eAAe;IACb,OAAO,KAAKJ,YAAZ;;;EAGFb,OAAO;IACL,OAAO,IAAIM,aAAJ,CAAkBH,MAAM,CAACC,WAAP,CAAmB,KAAKvC,OAAxB,CAAlB,CAAP;;;;;MC7CSqD;EAIXhE,YACEiE,UACAC;IAEA,KAAKC,KAAL,GAAaF,QAAb;IACA,KAAKG,KAAL,GAAaF,QAAb;;;;;ACTG,MAAMG,iBAAiB,GAAG;EAC/B,OAAOC,4BAAA,MAAA,MAAA,gBAAA,CAAP;AACD,CAFM;;MCIMC,wBAAwBC;EAGnCxE,YAAYyE;IACV,MAAM3E,qBAAqB,CAACe,SAA5B;IACA,KAAK4D,aAAL,GAAqBA,aAArB;;;EAGFC,aAAa;IACX,OAAO,IAAIjE,aAAJ,EAAP;;;EAGFkE,mBAAmB,CAACC,KAAD;IACjB,IAAI,KAAKH,aAAL,CAAmBI,GAAnB,CAAuBD,KAAK,CAACE,KAAN,CAAYnE,OAAZ,CAAoByB,KAA3C,CAAJ,EAAuD;MACrD,MAAM2C,kBAAkB,GAAG,KAAKN,aAAL,CAAmBhC,GAAnB,CACzBmC,KAAK,CAACE,KAAN,CAAYnE,OAAZ,CAAoByB,KADK,CAA3B;MAGA;QAEEkC,4BAAA,CAACS,kBAAD;UACEC,GAAG,kBAAkBJ,KAAK,CAACE,KAAN,CAAY3D,UAAZ,GAAyBgB;UAC9C8C,MAAM,EAAE,KAAKA;UACbH,KAAK,EAAEF,KAAK,CAACE;SAHf;;;;;IAQJ,OAAOR,4BAAA,CAACD,iBAAD,MAAA,CAAP;;;;;MC3BSa,wBAAwBC;EAGnCnF,YAAYyE;IACV,MAAM3E,qBAAqB,CAACwD,SAA5B;IACA,KAAKmB,aAAL,GAAqBA,aAArB;;;EAGFC,aAAa;IACX,OAAO,IAAItB,aAAJ,EAAP;;;EAGFgC,mBAAmB,CACjBN,KADiB,EAEjBO,QAFiB,EAGjBC,IAHiB;;;;IAMjB,IAAI,KAAKb,aAAL,CAAmBI,GAAnB,sBAAuBC,KAAK,CAAC3D,UAAN,EAAvB,qBAAuB,kBAAoBiB,KAA3C,CAAJ,EAAuD;MACrD,MAAM2C,kBAAkB,GAAG,KAAKN,aAAL,CAAmBhC,GAAnB;MAEzBqC,KAAK,CAAC3D,UAAN,GAAmBiB,KAFM,CAA3B;MAKA;QAEEkC,4BAAA,CAACS,kBAAD;UACEC,GAAG,kBAAkBF,KAAK,CAAC3D,UAAN,GAAmBgB;UACxC8C,MAAM,EAAE,KAAKA;UACbH,KAAK,EAAEA;UACPQ,IAAI,EAAEA;UACND,QAAQ,EAAEA;SALZ;;;;;IAUJ,OAAOf,4BAAA,CAACD,iBAAD,MAAA,CAAP;;;;;SCtCYkB,aACdC,UACAC;EAEA,MAAMC,IAAI,GAAGF,QAAQ,CAAC1C,OAAT,EAAb;EACA,MAAM6C,MAAM,GAAGF,SAAS,CAACG,UAAV,CAAqBJ,QAAQ,CAAC5B,WAAT,EAArB,CAAf;EACA,MAAMiC,MAAM,GAAGJ,SAAS,CAACG,UAAV,CAAqBJ,QAAQ,CAAC1B,WAAT,EAArB,CAAf;;EACA,IAAI6B,MAAM,IAAIE,MAAd,EAAsB;IACpBH,IAAI,CAACI,aAAL,CAAmBH,MAAM,CAACI,OAAP,CAAeP,QAAQ,CAAC3B,eAAT,EAAf,CAAnB;IACA6B,IAAI,CAACM,aAAL,CAAmBH,MAAM,CAACE,OAAP,CAAeP,QAAQ,CAACzB,eAAT,EAAf,CAAnB;IACA,OAAO2B,IAAP;;;EAEF,OAAOO,SAAP;AACD;;ACjBD,MAAMC,IAAI,GAAG;EACXC,UAAU,EAAE,mBADD;EAEXC,SAAS,EAAE,SAFA;EAGXC,SAAS,EAAE,SAHA;EAIXC,aAAa,EAAE,SAJJ;EAKXC,WAAW,EAAE,uBALF;EAOXC,oBAAoB,EAAE,0BAPX;EAQXC,kBAAkB,EAAE,wBART;EAUXC,mBAAmB,EAAE,SAVV;EAWXC,mBAAmB,EAAE,SAXV;EAaXC,oBAAoB,EAAE,QAbX;EAcXC,yBAAyB,EAAE,SAdhB;EAeXC,4BAA4B,EAAE,wBAfnB;EAiBXC,gBAAgB,EAAE,SAjBP;EAkBXC,qBAAqB,EAAE,SAlBZ;EAmBXC,aAAa,EACX,mFApBS;EAqBXC,eAAe,EAAE,qBArBN;EAuBXC,YAAY,EAAE,2BAvBH;EAyBXC,UAAU,EAAE,0BAzBD;EA0BXC,iBAAiB,EAAE,uBA1BR;EA4BXC,YAAY,EAAE,oBA5BH;EA8BXC,UAAU,EAAE,SA9BD;EA+BXC,WAAW,EAAE,SA/BF;EAgCXC,cAAc,EAAE,6BAhCL;EAkCXC,YAAY,EACV;AAnCS,CAAb;;;;;;;;;;;;ACWA,MAAM;EAAErB,SAAF;EAAac;AAAb,IAA8BjB,IAApC;AAEA,MAAMyB,SAAS,gBAAGC,UAAU,CAAC,OAAO;EAClCC,IAAI,EAAE;IACJC,MAAM,EAAE,GADJ;IAEJC,KAAK,EAAE,MAFH;IAGJC,UAAU,EAAE3B,SAHR;IAIJ4B,SAAS,EACP,8EALE;IAMJC,YAAY,EAAE,MANV;IAOJ7F,QAAQ,EAAE,OAPN;IAQJ8F,IAAI,EAAE,MARF;IASJC,GAAG,EAAE,KATD;IAUJC,SAAS,EAAE,kBAVP;IAYJ,WAAW;MACTF,IAAI,EAAE,MADG;MAETG,KAAK,EAAE;KAdL;IAiBJ,mBAAmB;MACjBC,OAAO,EAAE;;GAnBqB;EAuBlCC,IAAI,EAAE;IACJC,MAAM,EAAE,WADJ;IAEJ,sBAAsB;MACpBC,WAAW,EAAEvB,YADO;MAEpBY,KAAK,EAAE,qBAFa;MAGpBU,MAAM,EAAE,QAHY;MAIpBE,MAAM,EAAE,MAJY;MAKpBC,SAAS,EAAE;KAPT;IAUJ,SAAS;MACPC,OAAO,EAAE,OADF;MAEPJ,MAAM,EAAE;;;AAnCsB,CAAP,CAAD,CAA5B;;AAwCA,MAAMK,OAAO,GAAG;EACd,MAAMC,OAAO,GAAGpB,SAAS,EAAzB;EACA,OACErD,4BAAA,CAAC0E,GAAD;IAAKC,SAAS,KAAKF,OAAO,CAAClB;GAA3B,EACEvD,4BAAA,CAAC4E,IAAD;IAAMC,cAAc;IAACC,SAAS,EAAC;GAA/B,EACE9E,4BAAA,CAAC+E,cAAD;IAAgBhE,QAAQ;GAAxB,EACEf,4BAAA,CAACgF,YAAD,MAAA,EACEhF,4BAAA,MAAA;IACEiF,GAAG,+BAA+B,IAAIC,MAAJ,CAAWC,MAAX,EAAmBC,QAAnB,CAChC,QADgC;IAGlCC,GAAG,EAAC;GAJN,CADF,CADF,CADF,EAYErF,4BAAA,CAAC+E,cAAD,MAAA,EACE/E,4BAAA,CAACgF,YAAD,MAAA,EACEhF,4BAAA,MAAA;IACEiF,GAAG,+BAA+B,IAAIC,MAAJ,CAAWI,IAAX,EAAiBF,QAAjB,CAChC,QADgC;IAGlCC,GAAG,EAAC;GAJN,CADF,CADF,CAZF,CADF,EAyBErF,4BAAA,CAAC0E,GAAD;IAAKC,SAAS,EAAEF,OAAO,CAACP;GAAxB,EACElE,4BAAA,CAACuF,OAAD,MAAA,CADF,EAEEvF,4BAAA,MAAA;IACEiF,GAAG,+BAA+B,IAAIC,MAAJ,CAAWM,IAAX,EAAiBJ,QAAjB,CAChC,QADgC;IAGlCC,GAAG,EAAC;GAJN,CAFF,EAQErF,4BAAA,CAACuF,OAAD,MAAA,CARF,CAzBF,EAoCEvF,4BAAA,CAAC4E,IAAD;IAAMC,cAAc;IAACC,SAAS,EAAC;GAA/B,EACE9E,4BAAA,CAAC+E,cAAD;IAAgBU,QAAQ;GAAxB,EACEzF,4BAAA,CAACgF,YAAD,MAAA,EACEhF,4BAAA,MAAA;IACEiF,GAAG,+BAA+B,IAAIC,MAAJ,CAAWQ,IAAX,EAAiBN,QAAjB,CAChC,QADgC;IAGlCC,GAAG,EAAC;GAJN,CADF,CADF,CADF,EAYErF,4BAAA,CAAC+E,cAAD,MAAA,EACE/E,4BAAA,CAACgF,YAAD,MAAA,EACEhF,4BAAA,MAAA;IACEiF,GAAG,+BAA+B,IAAIC,MAAJ,CAAWS,UAAX,EAAuBP,QAAvB,CAChC,QADgC;IAGlCC,GAAG,EAAC;GAJN,CADF,CADF,CAZF,CApCF,CADF;AA8DD,CAhED;;AC/CA,MAAMO,gBAAgB,GAAIC,MAAD;EACvB,MAAM;IACJ/D,SADI;IAEJD,UAFI;IAGJG,aAHI;IAIJC,WAJI;IAKJF,SALI;IAMJU,gBANI;IAOJC,qBAPI;IAQJC,aARI;IASJC;MACEiD,MAVJ;EAWA,OAAO;IACLC,UAAU,EAAE;MACVC,cAAc,EAAE;QACdC,cAAc;;0BAEIlE;2BACCD;;;+BAGIC;2BACJD;;;;OATX;MAcVoE,OAAO,EAAE;QACPD,cAAc,EAAE;UACdzC,IAAI,EAAE;YACJ,kBAAkB;cAChBU,OAAO,EAAE,UADO;cAEhBP,UAAU,EAAE1B,aAFI;cAGhB4B,YAAY,EAAE,QAHE;cAIhBW,OAAO,EAAE,MAJO;cAKhB,6BAA6B;gBAC3BN,OAAO,EAAE,iBADkB;gBAE3BL,YAAY,EAAE,WAFa;gBAG3BH,KAAK,EAAE,aAHoB;gBAI3Bc,OAAO,EAAE,MAJkB;gBAK3B2B,UAAU,EAAE,QALe;gBAM3BC,cAAc,EAAE,QANW;gBAO3B,sBAAsB;kBACpBC,YAAY,EAAE;iBARW;gBAU3B,kBAAkB;kBAChBC,OAAO,EAAE;iBAXgB;gBAa3B,kBAAkB;kBAChB3C,UAAU,EAAE3B,SADI;kBAEhB4B,SAAS,EAAEhB,aAFK;kBAGhB0B,MAAM,sBAAsBzB,iBAHZ;kBAIhB,yBAAyB;oBACvB0D,KAAK,EAAE5D;;;eAvBG;cA2BhB,mBAAmB;gBACjB6D,UAAU,EAAE;eA5BE;cA8BhB,yBAAyB;gBACvBC,UAAU,EAAE,GADW;gBAEvBC,QAAQ,EAAE,WAFa;gBAGvBC,UAAU,EAAE,SAHW;gBAIvBC,aAAa,EAAE,WAJQ;gBAKvBL,KAAK,EAAErE,WALgB;gBAMvBkC,MAAM,EAAE;;;;;OArDR;MA2DVyC,eAAe,EAAE;QACfZ,cAAc,EAAE;UACdzC,IAAI,EAAE;YACJsD,QAAQ,EAAE;;;OA9DN;MAkEVC,iBAAiB,EAAE;QACjBd,cAAc,EAAE;UACdzC,IAAI,EAAE;YACJU,OAAO,EAAE,CADL;YAEJR,KAAK,EAAE,QAFH;YAGJsD,MAAM,EAAE,QAHJ;YAIJnD,YAAY,EAAE,KAJV;YAKJuC,cAAc,EAAE,QALZ;YAMJa,eAAe,EAAEhF,aANb;YAOJ,WAAW;cACTgF,eAAe,EAAEhF;aARf;YAUJ,sBAAsB;cACpBoE,YAAY,EAAE;aAXZ;YAaJ,kBAAkB;cAChBY,eAAe,EAAEvE,gBADD;cAEhB,WAAW;gBACTuE,eAAe,EAAEvE;;aAhBjB;YAmBJ,kBAAkB;cAChB4D,OAAO,EAAE;;;;;;GAzFrB;AAgGD,CA5GD;;AA8GA,aAAgBY,eAAD,IACbrB,gBAAgB,CAAC,EACf,GAAGhE,IADY;EAEf,GAAGqF;AAFY,CAAD,CADlB;;MCpHaC,sBAAsBC;EAC/BzL,YAAYmC;IACR,MAAMuJ,GAAG,mBAAmBvJ,cAA5B;IACA,MAAMuJ,GAAN;IACAzI,MAAM,CAAC0I,cAAP,CAAsB,IAAtB,EAA4BH,aAAa,CAACI,SAA1C;;;;;ACJR;AAGA,MAAaC;EAMT7L,YAAYmI,MAAcC,KAAaE,OAAewD;IAClD,KAAKC,KAAL,GAAa5D,IAAb;IACA,KAAK6D,IAAL,GAAY5D,GAAZ;IACA,KAAK6D,MAAL,GAAc3D,KAAd;IACA,KAAK4D,OAAL,GAAeJ,MAAf;;;;EAKI,IAAJ3D,IAAI;IACJ,OAAO,KAAK4D,KAAZ;;;;EAGI,IAAJ5D,IAAI,CAAC9H,KAAD;IACJ,KAAK0L,KAAL,GAAa1L,KAAb;;;;EAGG,IAAH+H,GAAG;IACH,OAAO,KAAK4D,IAAZ;;;;EAIG,IAAH5D,GAAG,CAAC/H,KAAD;IACH,KAAK2L,IAAL,GAAY3L,KAAZ;;;;EAIK,IAALiI,KAAK;IACL,OAAO,KAAK2D,MAAZ;;;;EAIK,IAAL3D,KAAK,CAACjI,KAAD;IACL,KAAK4L,MAAL,GAAc5L,KAAd;;;;EAIM,IAANyL,MAAM;IACN,OAAO,KAAKI,OAAZ;;;;EAIM,IAANJ,MAAM,CAACzL,KAAD;IACN,KAAK6L,OAAL,GAAe7L,KAAf;;;EAGJ8L,QAAQ;IACJ,OAAO,KAAKF,MAAL,GAAc,KAAKF,KAA1B;;;EAGJK,SAAS;IACL,OAAO,KAAKJ,IAAL,GAAY,KAAKE,OAAxB;;;;;ACxDR,MAAMG,KAAN;EAIIrM,YAAYgD;IACR,KAAKwF,IAAL,GAAYxF,aAAZ;IACA,KAAKsJ,QAAL,GAAgB,IAAIhK,GAAJ,EAAhB;;;EAGJiK,KAAK;IACD,OAAO,KAAK/D,IAAL,CAAU+D,KAAV,EAAP;;;EAGJC,OAAO;IACH,OAAO,KAAKhE,IAAZ;;;EAGJiE,QAAQ,CAACtK,EAAD;IACJ,OAAO,KAAKmK,QAAL,CAAc7J,GAAd,CAAkBN,EAAlB,CAAP;;;EAGJuK,QAAQ,CAACC,KAAD;IACJ,KAAKL,QAAL,CAAc/J,GAAd,CAAkBoK,KAAK,CAACJ,KAAN,EAAlB,EAAiCI,KAAjC;;;EAGJC,WAAW;IACP,OAAOC,KAAK,CAACC,IAAN,CAAW,KAAKR,QAAL,CAAcS,MAAd,EAAX,EAAmCC,GAAnC,CAAuCC,CAAC,IAAIA,CAAC,CAACT,OAAF,EAA5C,CAAP;;;EAGJU,cAAc;IACV,MAAMC,WAAW,GAAG,KAAKP,WAAL,EAApB;;IACA,KAAI,MAAMD,KAAV,IAAmBE,KAAK,CAACC,IAAN,CAAW,KAAKR,QAAL,CAAcS,MAAd,EAAX,CAAnB,EAAsD;MAClDI,WAAW,CAACxK,IAAZ,CAAiB,GAAGgK,KAAK,CAACO,cAAN,EAApB;;;IAEJ,OAAOC,WAAP;;;EAGJC,GAAG,CAACjL,EAAD;IACC,IAAG,KAAKoK,KAAL,MAAgBpK,EAAnB,EAAsB;MAClB,OAAO,KAAKqG,IAAZ;;;IAEJ,KAAK,IAAIA,IAAT,IAAiBqE,KAAK,CAACC,IAAN,CAAW,KAAKR,QAAL,CAAcS,MAAd,EAAX,CAAjB,EAAqD;MACjD,MAAMM,KAAK,GAAG7E,IAAI,CAAC4E,GAAL,CAASjL,EAAT,CAAd;;MACA,IAAGkL,KAAH,EAAS;QACL,OAAOA,KAAP;;;;IAGR,OAAO,KAAP;;;EAGJC,uBAAuB;;IAEnB,IAAIvF,KAAK,GAAG,KAAKyE,OAAL,GAAezE,KAA3B;IACA,IAAIsD,MAAM,GAAG,KAAKmB,OAAL,GAAenB,MAA5B;IACA,IAAIpL,CAAC,GAAG,KAAKuM,OAAL,GAAe5K,IAAf,EAAR;IACA,IAAI1B,CAAC,GAAG,KAAKsM,OAAL,GAAe3K,IAAf,EAAR;IACA,IAAIsG,IAAI,GAAGlI,CAAC,GAAG8H,KAAK,GAAG,CAAvB;IACA,IAAIO,KAAK,GAAGrI,CAAC,GAAG8H,KAAK,GAAG,CAAxB;IACA,IAAIK,GAAG,GAAGlI,CAAC,GAAGmL,MAAM,GAAG,CAAvB;IACA,IAAIS,MAAM,GAAG5L,CAAC,GAAGmL,MAAM,GAAG,CAA1B;;IACA,KAAK,IAAIkC,KAAT,IAAkBV,KAAK,CAACC,IAAN,CAAW,KAAKR,QAAL,CAAcS,MAAd,EAAX,CAAlB,EAAsD;MAClD,MAAMS,QAAQ,GAAGD,KAAK,CAACD,uBAAN,EAAjB;;MACA,IAAGE,QAAQ,CAACrF,IAAT,GAAgBA,IAAnB,EAAwB;QACpBA,IAAI,GAAGqF,QAAQ,CAACrF,IAAhB;;;MACH,IAAGqF,QAAQ,CAAClF,KAAT,GAAiBA,KAApB,EAA0B;QACvBA,KAAK,GAAGkF,QAAQ,CAAClF,KAAjB;;;MACH,IAAGkF,QAAQ,CAACpF,GAAT,GAAeA,GAAlB,EAAsB;QACnBA,GAAG,GAAGoF,QAAQ,CAACpF,GAAf;;;MACH,IAAGoF,QAAQ,CAAC1B,MAAT,GAAkBA,MAArB,EAA4B;QACzBA,MAAM,GAAG0B,QAAQ,CAAC1B,MAAlB;;;;IAGR,MAAM2B,EAAE,GAAG,IAAI5B,WAAJ,CAAgB1D,IAAhB,EAAsBC,GAAtB,EAA2BE,KAA3B,EAAkCwD,MAAlC,CAAX;;IAEA,OAAO2B,EAAP;;;;;AAMR,MAAaC;EAGT1N;IACI,KAAK2N,KAAL,GAAa,IAAIrL,GAAJ,EAAb;;;EAGJsL,OAAO,CAAC5K,aAAD;IACH,MAAMsC,IAAI,GAAGtC,aAAa,CAAC9B,YAAd,EAAb;;IACA,IAAGoE,IAAI,CAACuI,MAAL,IAAe,CAAlB,EAAoB;MAChB,KAAKF,KAAL,CAAWpL,GAAX,CAAeS,aAAa,CAACuJ,KAAd,EAAf,EAAsC,IAAIF,KAAJ,CAAUrJ,aAAV,CAAtC;KADJ,MAEK;MACDsC,IAAI,CAACwI,GAAL,GADC;;MAED,MAAMC,WAAW,GAAG,KAAKC,aAAL,CAAmB1I,IAAnB,CAApB;MACAyI,WAAW,CAACrB,QAAZ,CAAqB,IAAIL,KAAJ,CAAUrJ,aAAV,CAArB;;;;EAKRiL,QAAQ;IACJ,MAAM9J,KAAK,GAAG,EAAd;;IACA,KAAI,MAAMwI,KAAV,IAAmBE,KAAK,CAACC,IAAN,CAAW,KAAKa,KAAL,CAAWZ,MAAX,EAAX,CAAnB,EAAmD;MAC/C5I,KAAK,CAACxB,IAAN,CAAWgK,KAAK,CAACH,OAAN,EAAX;MACArI,KAAK,CAACxB,IAAN,CAAW,GAAGgK,KAAK,CAACO,cAAN,EAAd;;;IAEJ,OAAO/I,KAAP;;;EAGJ+J,YAAY,CAAC1F,IAAD;IACR,MAAMlD,IAAI,GAAGkD,IAAI,CAACtH,YAAL,EAAb;IACA,MAAMiN,cAAc,GAAG,KAAKC,OAAL,CAAa9I,IAAI,CAAC,CAAD,CAAjB,CAAvB;IACA,OAAO,CAAC6I,cAAc,CAAC3B,OAAf,EAAD,EAA2B,GAAG2B,cAAc,CAACvB,WAAf,EAA9B,CAAP;;;EAGJwB,OAAO,CAACC,MAAD;IACH,MAAMxG,IAAI,GAAG,KAAK8F,KAAL,CAAWlL,GAAX,CAAe4L,MAAf,CAAb;;IACA,IAAGxG,IAAI,KAAG5B,SAAV,EAAoB;MAChB,MAAM,IAAIuF,aAAJ,CAAkB6C,MAAlB,CAAN;;;IAEJ,OAAOxG,IAAP;;;EAGJ+E,WAAW,CAACtL,MAAD;IACP,MAAMgE,IAAI,GAAGhE,MAAM,CAACJ,YAAP,EAAb;;IACA,IAAIoE,IAAI,CAACuI,MAAL,IAAe,CAAnB,EAAsB;MAClB,MAAMhG,IAAI,GAAG,KAAKuG,OAAL,CAAa9M,MAAM,CAACiL,KAAP,EAAb,CAAb;MACA,OAAO1E,IAAI,CAAC+E,WAAL,EAAP;KAFJ,MAGO;MACH,MAAMD,KAAK,GAAG,KAAKqB,aAAL,CAAmB1I,IAAnB,CAAd;MACA,OAAOqH,KAAK,CAACC,WAAN,EAAP;;;;EAIR0B,SAAS,CAAC9F,IAAD;IACL,MAAMlD,IAAI,GAAGkD,IAAI,CAACtH,YAAL,EAAb;;IACA,IAAIoE,IAAI,CAACuI,MAAL,IAAe,CAAnB,EAAsB;MACnB,OAAO5H,SAAP;KADH,MAEO;MACHX,IAAI,CAACwI,GAAL,GADG;;MAEH,MAAMC,WAAW,GAAG,KAAKC,aAAL,CAAmB1I,IAAnB,CAApB;MACA,OAAOyI,WAAW,CAACvB,OAAZ,EAAP;;;;EAIR5G,UAAU,CAAC2I,MAAD;IACN,KAAK,IAAI1G,IAAT,IAAiBgF,KAAK,CAACC,IAAN,CAAW,KAAKa,KAAL,CAAWZ,MAAX,EAAX,CAAjB,EAAkD;MAC9C,MAAMM,KAAK,GAAGxF,IAAI,CAACuF,GAAL,CAASmB,MAAT,CAAd;;MACA,IAAGlB,KAAH,EAAS;;QAEL,OAAOA,KAAP;;;;IAGR,OAAOpH,SAAP;;;EAGJuI,2BAA2B,CAAChG,IAAD;IACvB,MAAMmE,KAAK,GAAG,KAAKqB,aAAL,CAAmBxF,IAAI,CAACtH,YAAL,EAAnB,CAAd;IACA,OAAOyL,KAAK,CAACW,uBAAN,EAAP;;;EAGIU,aAAa,CAAC1I,IAAD;IACjB,MAAM+I,MAAM,GAAG/I,IAAI,CAACmJ,KAAL,EAAf;;IAEA,IAAInN,MAAM,GAAG,KAAK8M,OAAL,CAAaC,MAAb,CAAb;;IACA,OAAM/I,IAAI,CAACuI,MAAL,GAAc,CAApB,EAAsB;MAClB,MAAMa,IAAI,GAAGpJ,IAAI,CAACmJ,KAAL,EAAb,CADkB;;MAGlBnN,MAAM,GAAGA,MAAM,CAACmL,QAAP,CAAgBiC,IAAhB,CAAT;;MACA,IAAIpN,MAAM,IAAI2E,SAAd,EAAwB;QACpB,MAAM,IAAIuF,aAAJ,CAAkBkD,IAAlB,CAAN;;;;IAGR,OAAOpN,MAAP;;;EAGJqN,yBAAyB,CAAC3L,aAAD;;;;;IAMrB,KAAK4L,sBAAL,CAA4B5L,aAA5B;;IAEA,KAAK6L,uBAAL,CAA6B7L,aAA7B;;;EAGI4L,sBAAsB,CAAC5L,aAAD;IAC1B,MAAMsJ,QAAQ,GAAG,KAAKM,WAAL,CAAiB5J,aAAjB,CAAjB;IAEAsJ,QAAQ,CAACwC,OAAT,CAAiBC,CAAC;;;;;;MAMd,MAAMC,aAAa,GAAGD,CAAC,CAAC3N,gBAAF,EAAtB;MACA2N,CAAC,CAAC5L,WAAF,CAAcH,aAAa,CAACpB,IAAd,KAAuBoN,aAAa,CAAC/O,CAAnD,EAAsD+C,aAAa,CAACnB,IAAd,KAAuBmN,aAAa,CAAC9O,CAA3F;KAPJ;;;EAYI2O,uBAAuB,CAAC7L,aAAD;IAC3B,MAAM1B,MAAM,GAAG,KAAKgN,SAAL,CAAetL,aAAf,CAAf;IACAA,aAAa,CAACjB,mBAAd,CAAkCT,MAAlC;;;EAGJ2N,iCAAiC,CAAC9K,KAAD;IAC7BA,KAAK,CAAC2K,OAAN,CAAcC,CAAC,IAAIA,CAAC,CAAC/M,uBAAF,CAA0B,KAAKwM,2BAAL,CAAiCO,CAAjC,CAA1B,CAAnB;;;;;SC5MQG,kBAAkBC;EAChC,MAAM1J,SAAS,GAAG,IAAIiI,SAAJ,EAAlB;EACAyB,SAAS,CAACC,IAAV,CAAe,UAASC,CAAT,EAAYC,CAAZ;IACb,OAAOD,CAAC,CAACxM,QAAF,KAAeyM,CAAC,CAACzM,QAAF,EAAtB;GADF;;EAIA,KAAI,MAAM0M,EAAV,IAAgBJ,SAAhB,EAA0B;IAExB,MAAMnM,aAAa,GAAGuM,EAAE,CAACzM,OAAH,EAAtB;IAEA2C,SAAS,CAACmI,OAAV,CAAkB5K,aAAlB;;;EAEF,OAAOyC,SAAP;AACD;AAED,SAAgB+J,yBAAyBC,gBAAiCC;;EAExED,cAAc,CAACX,OAAf,CAAuB9L,aAAa,IAAIA,aAAa,CAAC2M,gBAAd,CAA+B;IAACC,eAAe,EAAGhL,KAAK,IAAI8K,QAAQ,CAAC9K,KAAD;GAAnE,CAAxC;AACD;;ACND,MAAM+C,WAAS,gBAAGC,UAAU,CAACiI,CAAC,KAAK;EACjCC,SAAS,EAAE;IACTzE,MAAM,EAAE,MADC;IAETtD,KAAK,EAAE;GAHwB;EAKjCgI,eAAe,EAAE;IACf1E,MAAM,EAAE,MADO;IAEftD,KAAK,EAAE,MAFQ;IAGfC,UAAU,EAAE;;AARmB,CAAL,CAAF,CAA5B;;AAwBA,MAAMgI,WAAW,GAAG,CAAC;EACnBb,SADmB;EAEnBc,SAFmB;EAGnBxL,aAHmB;EAInByL,gBAJmB;EAKnBC;AALmB,CAAD;EAOlB,MAAMpH,OAAO,GAAGpB,WAAS,EAAzB;;EAGA,MAAM1C,MAAM,GAAGmL,YAAY,EAA3B;EAEAnL,MAAM,CACHoL,gBADH;GAGGC,eAHH,CAGmB,IAAI/L,eAAJ,CAAoBE,aAAa,CAACN,KAAlC,CAHnB;EAKAc,MAAM,CACHsL,gBADH;GAGGD,eAHH,CAGmB,IAAIpL,eAAJ,CAAoBT,aAAa,CAACL,KAAlC,CAHnB;EAKA,MAAMqB,SAAS,GAAGyJ,iBAAiB,CAACC,SAAD,CAAnC;;EAEA,MAAMqB,aAAa,GAAI5L,KAAD;IACpB,MAAM4D,IAAI,GAAG5D,KAAK,CAAC6L,MAAnB;IACAhL,SAAS,CAACkJ,yBAAV,CAAoCnG,IAApC;;;IAGAvD,MAAM,CAACuL,aAAP;GALF;;;EAWA,MAAM1L,KAAK,GAAG,IAAI4L,YAAJ,EAAd;EAEA,MAAMvM,KAAK,GAAGsB,SAAS,CAACwI,QAAV,EAAd;EACAuB,wBAAwB,CAACrL,KAAD,EAAQqM,aAAR,CAAxB;EAEA,MAAMpM,KAAK,GAAG6L,SAAS,CACpBjD,GADW,CACP2D,EAAE,IAAIpL,YAAY,CAACoL,EAAD,EAAKlL,SAAL,CADX,EAEXmL,MAFW,CAEJC,GAAG,IAAIA,GAAG,KAAK5K,SAFX,CAAd;;EAKAnB,KAAK,CAACgM,MAAN,CAAa,GAAG3M,KAAhB,EAAuB,GAAGC,KAA1B;;EAGAa,MAAM,CAAC8L,QAAP,CAAgBjM,KAAhB;;;;EAMAkM,SAAS,CAAC;;IAERvL,SAAS,CAACwJ,iCAAV,CAA4CnK,KAAK,CAACmJ,QAAN,EAA5C,EAA8DxI,SAA9D;GAFO,EAGN,EAHM,CAAT;EAMA,MAAMwL,kBAAkB,GAAGf,gBAAgB,GACvCA,gBADuC,GAEvCnH,OAAO,CAAC+G,SAFZ;EAIA,OACExL,aAAA,CAAC4M,aAAD;IAAeC,KAAK,EAAEC,WAAW,CAACD,KAAK,CAAChB,SAAD,oBAACA,SAAS,CAAEkB,oBAAZ,CAAN;GAAjC,EACE/M,aAAA,CAACgN,WAAD,MAAA,CADF,EAEEhN,aAAA,CAAC0E,KAAD;IAAKC,SAAS,EAAEgI;GAAhB,EACE3M,aAAA,CAACwE,OAAD,MAAA,CADF,EAEExE,aAAA,CAACiN,YAAD;IACEtI,SAAS,KAAKF,OAAO,CAACgH,mBAAmBI,SAA9B,oBAA8BA,SAAS,CAAEqB;IACpDvM,MAAM,EAAEA;GAFV,CAFF,CAFF,CADF;AAYD,CA5ED;;;;;"}