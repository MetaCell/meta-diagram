{"version":3,"file":"meta-diagram.esm.js","sources":["../src/models/MetaOptions.ts","../src/models/MetaNode.ts","../src/models/MetaLink.ts","../src/models/ComponentsMap.ts","../src/constants.ts","../src/react-diagrams/MetaNodeModel.ts","../src/components/UnknownTypeWidget.tsx","../src/react-diagrams/MetaNodeFactory.tsx","../src/react-diagrams/MetaLinkModel.ts","../src/react-diagrams/MetaLinkFactory.tsx","../src/helpers/nodesHelper.ts","../src/helpers/linksHelper.ts","../src/components/assets/styles/variables.ts","../src/components/Sidebar.tsx","../src/models/Position.ts","../src/index.tsx"],"sourcesContent":["import { IShape } from './IShape';\nimport { IId } from './IId';\n\nexport class MetaOptions implements IShape, IId {\n  options: Map<string, any>;\n\n  constructor(\n    id: string,\n    name: string,\n    shape: string,\n    options: Map<string, any>\n  ) {\n    this.options = options;\n    this.options.set('id', id);\n    this.options.set('name', name);\n    this.options.set('shape', shape);\n  }\n\n  getId(): string {\n    return this.options.get('id');\n  }\n\n  getShape(): string {\n    return this.options.get('shape');\n  }\n}\n","import { MetaOptions } from './MetaOptions';\nimport { Position } from './Position';\n\nexport class MetaNode {\n  children: MetaNode[];\n  options: MetaOptions;\n\n  constructor(\n    id: string,\n    name: string,\n    shape: string,\n    position: Position,\n    options: Map<string, any>\n  ) {\n    this.children = [];\n    options.set('position', position);\n    this.options = new MetaOptions(id, name, shape, options);\n  }\n}\n","import { MetaOptions } from './MetaOptions';\nimport { ILink } from './ILink';\n\nexport class MetaLink implements ILink {\n  sourceId: string;\n  sourcePortId: string;\n  targetId: string;\n  targetPortId: string;\n  options: MetaOptions;\n\n  constructor(\n    id: string,\n    name: string,\n    shape: string,\n    sourceId: string,\n    sourcePortId: string,\n    targetId: string,\n    targetPortId: string,\n    options: Map<string, any>\n  ) {\n    this.sourceId = sourceId;\n    this.sourcePortId = sourcePortId;\n    this.targetId = targetId;\n    this.targetPortId = targetPortId;\n    this.options = new MetaOptions(id, name, shape, options);\n  }\n\n  getSourceId(): string {\n    return this.sourceId;\n  }\n\n  getSourcePortId(): string {\n    return this.sourcePortId;\n  }\n\n  getTargetId(): string {\n    return this.targetId;\n  }\n\n  getTargetPortId(): string {\n    return this.targetPortId;\n  }\n}\n","import React from 'react';\n\nexport class ComponentsMap {\n  nodes: Map<string, React.ComponentType>;\n  links: Map<string, React.ComponentType>;\n\n  constructor(\n    nodesMap: Map<string, React.ComponentType>,\n    linksMap: Map<string, React.ComponentType>\n  ) {\n    this.nodes = nodesMap;\n    this.links = linksMap;\n  }\n}\n","export enum ReactDiagramMetaTypes {\n  META_NODE = 'meta-node-type',\n  META_LINK = 'meta-link-type',\n}\n","import { DefaultPortModel, NodeModel } from '@projectstorm/react-diagrams';\nimport { ReactDiagramMetaTypes } from '../constants';\n\nexport class MetaNodeModel extends NodeModel {\n  constructor(options = {}) {\n    super({\n      ...options,\n      type: ReactDiagramMetaTypes.META_NODE,\n    });\n\n    // set up an in and out port\n\n    this.addPort(\n      new DefaultPortModel({\n        in: true,\n        name: 'in',\n      })\n    );\n    this.addPort(\n      new DefaultPortModel({\n        in: false,\n        name: 'out',\n      })\n    );\n  }\n}\n","import React from 'react';\n\nexport const UnknownTypeWidget = () => {\n  return <div>Unknown Type</div>;\n};\n","import { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { MetaNodeModel } from './MetaNodeModel';\nimport { UnknownTypeWidget } from '../components/UnknownTypeWidget';\nimport React from 'react';\nimport { ReactDiagramMetaTypes } from '../constants';\n\nexport class MetaNodeFactory extends AbstractReactFactory {\n  componentsMap: Map<string, React.ComponentType>;\n\n  constructor(componentsMap: Map<string, React.ComponentType>) {\n    super(ReactDiagramMetaTypes.META_NODE);\n    this.componentsMap = componentsMap;\n  }\n\n  generateModel() {\n    return new MetaNodeModel();\n  }\n\n  generateReactWidget(event: any): JSX.Element {\n    if (this.componentsMap.has(event.model.options.shape)) {\n      const ReactComponentType = this.componentsMap.get(\n        event.model.options.shape\n      );\n      // @ts-ignore\n      return <ReactComponentType engine={this.engine} node={event.model} />;\n    }\n    // TODO: Generate default node instead\n    return <UnknownTypeWidget />;\n  }\n}\n","import { DefaultLinkModel } from '@projectstorm/react-diagrams';\nimport { ReactDiagramMetaTypes } from '../constants';\n\nexport class MetaLinkModel extends DefaultLinkModel {\n  constructor(options = {}) {\n    super({\n      ...options,\n      type: ReactDiagramMetaTypes.META_LINK,\n    });\n  }\n}\n","import { MetaLinkModel } from './MetaLinkModel';\nimport { UnknownTypeWidget } from '../components/UnknownTypeWidget';\nimport { ReactDiagramMetaTypes } from '../constants';\nimport React from 'react';\nimport { DefaultLinkFactory } from '@projectstorm/react-diagrams';\n\nexport class MetaLinkFactory extends DefaultLinkFactory {\n  componentsMap: Map<string, JSX.Element>;\n\n  constructor(componentsMap: Map<string, JSX.Element>) {\n    super(ReactDiagramMetaTypes.META_LINK);\n    this.componentsMap = componentsMap;\n  }\n\n  generateModel() {\n    return new MetaLinkModel();\n  }\n\n  generateLinkSegment(\n    model: MetaLinkModel,\n    selected: boolean,\n    path: string\n  ): JSX.Element {\n    // @ts-ignore\n    if (this.componentsMap.has(model.getOptions()?.shape)) {\n      const ReactComponentType = this.componentsMap.get(\n        // @ts-ignore\n        model.getOptions().shape\n      );\n\n      return (\n        // @ts-ignore\n        <ReactComponentType model={model} path={path} selected={selected} />\n      );\n    }\n    // TODO: Generate default link instead\n    return <UnknownTypeWidget />;\n  }\n}\n","import { MetaNodeModel } from '../react-diagrams/MetaNodeModel';\n\nexport function getNode(\n  id: string,\n  nodes: MetaNodeModel[]\n): MetaNodeModel | undefined {\n  return nodes.find(n => n.getOptions().id === id);\n}\n","import { MetaLink } from '../models/MetaLink';\nimport { MetaLinkModel } from '../react-diagrams/MetaLinkModel';\nimport { MetaNodeModel } from '../react-diagrams/MetaNodeModel';\nimport { getNode } from './nodesHelper';\n\nexport function getLinkModel(\n  metaLink: MetaLink,\n  nodes: MetaNodeModel[]\n): MetaLinkModel | undefined {\n  const link = new MetaLinkModel(Object.fromEntries(metaLink.options.options));\n  const source = getNode(metaLink.getSourceId(), nodes);\n  const target = getNode(metaLink.getTargetId(), nodes);\n  if (source && target) {\n    link.setSourcePort(source.getPort(metaLink.getSourcePortId()));\n    link.setTargetPort(target.getPort(metaLink.getTargetPortId()));\n    return link;\n  }\n  return undefined;\n}\n","const vars = {\n  fontFamily: 'Inter, sans-serif',\n  primaryBg: '#f1f1f1',\n  textWhite: '#FFFFFF',\n  chipTextColor: '#F2F2F7',\n  chipBgColor: 'rgba(60, 60, 67, 0.4)',\n\n  chipPrimaryTextColor: 'rgba(255, 255, 255, 0.8)',\n  chipPrimaryBgColor: 'rgba(0, 122, 255, 0.6)',\n\n  breadcrumbLinkColor: '#A2A2A2',\n  breadcrumbTextColor: '#292929',\n\n  buttonPrimaryBgColor: '4353FF',\n  buttonPrimaryBgHoverColor: '#3443E1',\n  buttonPrimaryDisabledBgColor: 'rgba(0, 122, 255, 0.4)',\n\n  listItemActiveBg: '#007AFF',\n  listSelectedTextColor: '#3C3C43',\n  listBoxShadow: '0 0.1875rem 0.5rem rgba(0, 0, 0, 0.12), 0 0.1875rem 0.0625rem rgba(0, 0, 0, 0.04)',\n  listBorderColor: 'rgba(0, 0, 0, 0.04)',\n\n  dividerColor: 'rgba(118, 120, 125, 0.12)',\n\n  dropdownBg: 'rgba(246, 246, 248, 0.8)',\n  dropdownTextColor: 'rgba(60, 60, 67, 0.6)',\n\n  overlayColor: 'rgba(0, 0, 0, 0.4)',\n\n  progressBg: '#E5E5E5',\n  progressBar: '#017AFF',\n  progressShadow: 'inset 0 0 0.0625rem #E3E3E3',\n\n  switchShadow: '0 0.1875rem 0.5rem rgba(0, 0, 0, 0.15), 0 0.1875rem 0.0625rem rgba(0, 0, 0, 0.06)'\n};\n\nexport default vars;","import React from 'react';\nimport { Box } from '@mui/system';\nimport { makeStyles } from '@mui/styles';\nimport vars from \"./assets/styles/variables\";\nimport { Divider, List, ListItemButton, ListItemIcon } from '@mui/material';\nimport Move from './assets/svg/move.svg';\nimport Icon from './assets/svg/icon.svg';\nimport Node from './assets/svg/node.svg';\nimport Cursor from './assets/svg/cursor.svg';\nimport Fullscreen from './assets/svg/fullscreen.svg';\n\nconst { textWhite, dividerColor } = vars;\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    zIndex: '5',\n    width: '4rem',\n    background: textWhite,\n    boxShadow: '0 0 3.75rem rgba(0, 0, 0, 0.1), 0 0.5rem 2.5rem -0.625rem rgba(0, 0, 0, 0.1)',\n    borderRadius: '2rem',\n    position: 'fixed',\n    left: '1rem',\n    top: '50%',\n    transform: 'translateY(-50%)',\n\n    '&.right': {\n      left: 'auto',\n      right: '1rem',\n    },\n\n    '& .MuiList-root': {\n      padding: '0.75rem',\n    },\n  },\n\n  node: {\n    margin: '0.25rem 0',\n    '& .MuiDivider-root': {\n      borderColor: dividerColor,\n      width: 'calc(100% - 1.5rem)',\n      margin: '0 auto',\n      border: 'none',\n      borderTop: '0.0625rem solid'\n    },\n\n    '& img': {\n      display: 'block',\n      margin: '1rem 0',\n    },\n  },\n}));\n\nconst Sidebar = () => {\n  const classes = useStyles();\n  return (\n    <Box className={`${classes.root} left`}>\n      <List disablePadding component=\"nav\">\n        <ListItemButton selected>\n          <ListItemIcon>\n            <img src={`data:image/svg+xml;base64,${new Buffer(Cursor).toString('base64')}`} alt=\"icon\" />\n          </ListItemIcon>\n        </ListItemButton>\n\n        <ListItemButton>\n          <ListItemIcon>\n            <img src={`data:image/svg+xml;base64,${new Buffer(Move).toString('base64')}`} alt=\"move\" />\n          </ListItemIcon>\n        </ListItemButton>\n      </List>\n\n      <Box className={classes.node}>\n        <Divider />\n        <img src={`data:image/svg+xml;base64,${new Buffer(Node).toString('base64')}`} alt=\"node\" />\n        <Divider />\n      </Box>\n\n      <List disablePadding component=\"nav\">\n        <ListItemButton disabled>\n          <ListItemIcon>\n            <img src={`data:image/svg+xml;base64,${new Buffer(Icon).toString('base64')}`} alt=\"icon\" />\n          </ListItemIcon>\n        </ListItemButton>\n\n        <ListItemButton>\n          <ListItemIcon>\n            <img src={`data:image/svg+xml;base64,${new Buffer(Fullscreen).toString('base64')}`} alt=\"fullscreen\" />\n          </ListItemIcon>\n        </ListItemButton>\n      </List>\n    </Box>\n  )\n};\n\nexport default Sidebar;","export class Position {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}\n","import * as React from 'react';\nimport { MetaNode } from './models/MetaNode';\nimport { MetaLink } from './models/MetaLink';\nimport { ComponentsMap } from './models/ComponentsMap';\nimport createEngine, { DiagramModel } from '@projectstorm/react-diagrams';\nimport { MetaNodeFactory } from './react-diagrams/MetaNodeFactory';\nimport { MetaLinkFactory } from './react-diagrams/MetaLinkFactory';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport { MetaNodeModel } from './react-diagrams/MetaNodeModel';\nimport { getLinkModel } from './helpers/linksHelper';\nimport { makeStyles } from '@material-ui/core';\nimport Sidebar from './components/Sidebar';\n\nconst useStyles = makeStyles(_ => ({\n  container: {\n    height: '100%',\n    width: '100%',\n  },\n  canvasContainer: {\n    height: '100%',\n    width: '100%',\n    background: '#333333',\n  },\n}));\n\ninterface MetaDiagramProps {\n  metaNodes: MetaNode[];\n  metaLinks: MetaLink[];\n  componentsMap: ComponentsMap;\n  wrapperClassName?: string;\n  canvasClassName?: string;\n}\n\nconst MetaDiagram = ({\n  metaNodes,\n  metaLinks,\n  componentsMap,\n  wrapperClassName,\n  canvasClassName,\n}: MetaDiagramProps) => {\n  const classes = useStyles();\n\n  // set up the diagram engine\n  const engine = createEngine();\n\n  engine\n    .getNodeFactories()\n    // @ts-ignore\n    .registerFactory(new MetaNodeFactory(componentsMap.nodes));\n\n  engine\n    .getLinkFactories()\n    // @ts-ignore\n    .registerFactory(new MetaLinkFactory(componentsMap.links));\n\n  // set up the diagram model\n\n  const model = new DiagramModel();\n  const nodes = metaNodes.map(\n    mn => new MetaNodeModel(Object.fromEntries(mn.options.options))\n  );\n  const links = metaLinks\n    .map(ml => getLinkModel(ml, nodes))\n    .filter(mlm => mlm !== undefined);\n  // @ts-ignore\n  model.addAll(...nodes, ...links);\n\n  // load model into engine\n  engine.setModel(model);\n\n  const containerClassName = wrapperClassName\n    ? wrapperClassName\n    : classes.container;\n  const diagramClassName = canvasClassName\n    ? canvasClassName\n    : classes.canvasContainer;\n  return (\n    <div className={containerClassName}>\n      <Sidebar />\n      <CanvasWidget className={diagramClassName} engine={engine} />\n    </div>\n  );\n};\n\nexport default MetaDiagram;\nexport { MetaNode, MetaLink, MetaNodeModel, ComponentsMap };\nexport { MetaLinkModel } from './react-diagrams/MetaLinkModel';\nexport { Position } from './models/Position';\n"],"names":["MetaOptions","constructor","id","name","shape","options","set","getId","get","getShape","MetaNode","position","children","MetaLink","sourceId","sourcePortId","targetId","targetPortId","getSourceId","getSourcePortId","getTargetId","getTargetPortId","ComponentsMap","nodesMap","linksMap","nodes","links","ReactDiagramMetaTypes","MetaNodeModel","NodeModel","type","META_NODE","addPort","DefaultPortModel","in","UnknownTypeWidget","React","MetaNodeFactory","AbstractReactFactory","componentsMap","generateModel","generateReactWidget","event","has","model","ReactComponentType","engine","node","MetaLinkModel","DefaultLinkModel","META_LINK","MetaLinkFactory","DefaultLinkFactory","generateLinkSegment","selected","path","getOptions","getNode","find","n","getLinkModel","metaLink","link","Object","fromEntries","source","target","setSourcePort","getPort","setTargetPort","undefined","vars","fontFamily","primaryBg","textWhite","chipTextColor","chipBgColor","chipPrimaryTextColor","chipPrimaryBgColor","breadcrumbLinkColor","breadcrumbTextColor","buttonPrimaryBgColor","buttonPrimaryBgHoverColor","buttonPrimaryDisabledBgColor","listItemActiveBg","listSelectedTextColor","listBoxShadow","listBorderColor","dividerColor","dropdownBg","dropdownTextColor","overlayColor","progressBg","progressBar","progressShadow","switchShadow","useStyles","makeStyles","root","zIndex","width","background","boxShadow","borderRadius","left","top","transform","right","padding","margin","borderColor","border","borderTop","display","Sidebar","classes","Box","className","List","disablePadding","component","ListItemButton","ListItemIcon","src","Buffer","Cursor","toString","alt","Move","Divider","Node","disabled","Icon","Fullscreen","Position","x","y","_","container","height","canvasContainer","MetaDiagram","metaNodes","metaLinks","wrapperClassName","canvasClassName","createEngine","getNodeFactories","registerFactory","getLinkFactories","DiagramModel","map","mn","ml","filter","mlm","addAll","setModel","containerClassName","diagramClassName","CanvasWidget"],"mappings":"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"}