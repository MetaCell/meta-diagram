{"version":3,"file":"meta-diagram.cjs.development.js","sources":["../src/constants.ts","../src/models/Position.ts","../src/react-diagrams/MetaNodeModel.ts","../src/models/MetaNode.ts","../src/react-diagrams/MetaLinkModel.ts","../src/models/MetaLink.ts","../src/models/ComponentsMap.ts","../src/components/UnknownTypeWidget.tsx","../src/react-diagrams/MetaNodeFactory.tsx","../src/react-diagrams/MetaLinkFactory.tsx","../src/helpers/linksHelper.ts","../src/components/assets/styles/variables.ts","../src/components/Sidebar.tsx","../src/theme.ts","../src/models/Exceptions.ts","../src/models/BoundingBox.ts","../src/models/MetaGraph.ts","../src/helpers/nodesHelper.ts","../src/helpers/engineHelper.ts","../src/index.tsx"],"sourcesContent":["export enum ReactDiagramMetaTypes {\n  META_NODE = 'meta-node-type',\n  META_LINK = 'meta-link-type',\n}\n","export class Position {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(otherPosition: Position) : Position {\n    return new Position(this.x+ otherPosition.x, this.y + otherPosition.y)\n  }\n\n  sub(otherPosition: Position) : Position {\n    return new Position(this.x - otherPosition.x, this.y - otherPosition.y)\n  }\n\n}\n","import {DefaultPortModel, NodeModel} from '@projectstorm/react-diagrams';\nimport {ReactDiagramMetaTypes} from '../constants';\nimport {Position} from \"../models/Position\";\nimport {MetaGraph} from \"../models/MetaGraph\";\n\nexport class MetaNodeModel extends NodeModel {\n    constructor(options = {}) {\n        super({\n            ...options,\n            type: ReactDiagramMetaTypes.META_NODE,\n        });\n\n        // set up an in and out port\n\n        this.addPort(\n            new DefaultPortModel({\n                in: true,\n                name: 'in',\n            })\n        );\n        this.addPort(\n            new DefaultPortModel({\n                in: false,\n                name: 'out',\n            })\n        );\n    }\n\n\n    getGraphPath(): string[]{\n        // @ts-ignore\n        return [...this.getOptions()['graphPath']]\n    }\n\n    private calculateLocalPosition(metaGraph: MetaGraph): Position {\n        const worldPosition = new Position(this.getX(), this.getY())\n        // @ts-ignore\n        const parent = metaGraph.getParent(this)\n        const parentWorldPosition = parent ? new Position(parent.getX(), parent.getY()): new Position(0,0)\n        return worldPosition.sub(parentWorldPosition)\n    }\n\n    // @ts-ignore\n    getContainerBoundingBox(metaGraph: MetaNodeModel[]): any {\n        // @ts-ignore\n\n    }\n\n    updateLocalPosition(metaGraph: MetaGraph): void {\n        // @ts-ignore\n        this.options['localPosition'] =  this.calculateLocalPosition(metaGraph)\n    }\n\n    setContainerBoundingBox(containerBoundingBox: {left: number, top: number, right: number, bottom: number}): void {\n        // @ts-ignore\n        this.options['containerBoundingBox'] =  containerBoundingBox\n    }\n\n}\n","import { Position } from './Position';\nimport {MetaNodeModel} from \"../react-diagrams/MetaNodeModel\";\n\nexport class MetaNode {\n  private readonly parent: MetaNode | undefined;\n  private readonly position: Position;\n  private readonly options: Map<string, any>;\n\n  constructor(\n    id: string,\n    name: string,\n    shape: string,\n    position: Position,\n    parent: MetaNode | undefined,\n    options: Map<string, any>\n  ) {\n    this.parent = parent\n    this.position = position\n    this.options = new Map(options)\n    this.options.set('id', id);\n    this.options.set('name', name);\n    this.options.set('shape', shape);\n  }\n\n  private getId() : string{\n    return this.options.get('id')\n  }\n\n  private getGraphPath() : string[] {\n    if(this.parent){\n      const graphPath = this.parent.getGraphPath()\n      graphPath.push(<string>this.getId())\n      return graphPath\n    }\n    return [this.getId()]\n  }\n\n  private getWorldPosition() : Position {\n    return this.parent ? this.position.add(this.parent?.getWorldPosition()) : this.position\n  }\n\n  getDepth() : number {\n    return this.parent ? this.parent.getDepth()+1 : 0\n  }\n\n  toModel() : MetaNodeModel {\n    const optionsMap = new Map(this.options)\n    optionsMap.set('graphPath', this.getGraphPath())\n    optionsMap.set('localPosition', this.position)\n    optionsMap.set('depth', this.getDepth())\n    const metaNodeModel =  new MetaNodeModel(Object.fromEntries(optionsMap))\n    const worldPosition = this.getWorldPosition()\n    metaNodeModel.setPosition(worldPosition.x, worldPosition.y)\n    return metaNodeModel\n  }\n\n}\n","import { DefaultLinkModel } from '@projectstorm/react-diagrams';\nimport { ReactDiagramMetaTypes } from '../constants';\n\nexport class MetaLinkModel extends DefaultLinkModel {\n  constructor(options = {}) {\n    super({\n      ...options,\n      type: ReactDiagramMetaTypes.META_LINK,\n    });\n  }\n}\n","import { ILink } from './ILink';\nimport {MetaLinkModel} from \"../react-diagrams/MetaLinkModel\";\n\nexport class MetaLink implements ILink {\n  sourceId: string;\n  sourcePortId: string;\n  targetId: string;\n  targetPortId: string;\n  options: Map<string, any>;\n\n  constructor(\n    id: string,\n    name: string,\n    shape: string,\n    sourceId: string,\n    sourcePortId: string,\n    targetId: string,\n    targetPortId: string,\n    options: Map<string, any>\n  ) {\n    this.sourceId = sourceId;\n    this.sourcePortId = sourcePortId;\n    this.targetId = targetId;\n    this.targetPortId = targetPortId;\n    this.options = options;\n    this.options.set('id', id);\n    this.options.set('name', name);\n    this.options.set('shape', shape);\n  }\n\n  getSourceId(): string {\n    return this.sourceId;\n  }\n\n  getSourcePortId(): string {\n    return this.sourcePortId;\n  }\n\n  getTargetId(): string {\n    return this.targetId;\n  }\n\n  getTargetPortId(): string {\n    return this.targetPortId;\n  }\n\n  toModel(): MetaLinkModel {\n    return new MetaLinkModel(Object.fromEntries(this.options))\n  }\n}\n","import React from 'react';\n\nexport class ComponentsMap {\n  nodes: Map<string, React.ComponentType>;\n  links: Map<string, React.ComponentType>;\n\n  constructor(\n    nodesMap: Map<string, React.ComponentType>,\n    linksMap: Map<string, React.ComponentType>\n  ) {\n    this.nodes = nodesMap;\n    this.links = linksMap;\n  }\n}\n","import React from 'react';\n\nexport const UnknownTypeWidget = () => {\n  return <div>Unknown Type</div>;\n};\n","import { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { MetaNodeModel } from './MetaNodeModel';\nimport { UnknownTypeWidget } from '../components/UnknownTypeWidget';\nimport React from 'react';\nimport { ReactDiagramMetaTypes } from '../constants';\n\nexport class MetaNodeFactory extends AbstractReactFactory {\n  componentsMap: Map<string, React.ComponentType>;\n\n  constructor(componentsMap: Map<string, React.ComponentType>) {\n    super(ReactDiagramMetaTypes.META_NODE);\n    this.componentsMap = componentsMap;\n  }\n\n  generateModel() {\n    return new MetaNodeModel();\n  }\n\n  generateReactWidget(event: any): JSX.Element {\n    if (this.componentsMap.has(event.model.options.shape)) {\n      const ReactComponentType = this.componentsMap.get(\n        event.model.options.shape\n      );\n      return (\n        // @ts-ignore\n        <ReactComponentType\n          key={`node-factory-${event.model.getOptions().id}`}\n          engine={this.engine}\n          model={event.model}\n        />\n      );\n    }\n    // TODO: Generate default node instead\n    return <UnknownTypeWidget />;\n  }\n}\n","import { MetaLinkModel } from './MetaLinkModel';\nimport { UnknownTypeWidget } from '../components/UnknownTypeWidget';\nimport { ReactDiagramMetaTypes } from '../constants';\nimport React from 'react';\nimport { DefaultLinkFactory } from '@projectstorm/react-diagrams';\n\nexport class MetaLinkFactory extends DefaultLinkFactory {\n  componentsMap: Map<string, JSX.Element>;\n\n  constructor(componentsMap: Map<string, JSX.Element>) {\n    super(ReactDiagramMetaTypes.META_LINK);\n    this.componentsMap = componentsMap;\n  }\n\n  generateModel() {\n    return new MetaLinkModel();\n  }\n\n  generateLinkSegment(\n    model: MetaLinkModel,\n    selected: boolean,\n    path: string\n  ): JSX.Element {\n    // @ts-ignore\n    if (this.componentsMap.has(model.getOptions()?.shape)) {\n      const ReactComponentType = this.componentsMap.get(\n        // @ts-ignore\n        model.getOptions().shape\n      );\n\n      return (\n        // @ts-ignore\n        <ReactComponentType\n          key={`link-factory-${model.getOptions().id}`}\n          engine={this.engine}\n          model={model}\n          path={path}\n          selected={selected}\n        />\n      );\n    }\n    // TODO: Generate default link instead\n    return <UnknownTypeWidget />;\n  }\n}\n","import { MetaLink } from '../models/MetaLink';\nimport { MetaLinkModel } from '../react-diagrams/MetaLinkModel';\nimport {MetaGraph} from \"../models/MetaGraph\";\n\nexport function getLinkModel(\n  metaLink: MetaLink,\n  metaGraph: MetaGraph\n): MetaLinkModel | undefined {\n  const link = metaLink.toModel();\n  const source = metaGraph.getNodeDFS(metaLink.getSourceId());\n  const target = metaGraph.getNodeDFS(metaLink.getTargetId());\n  if (source && target) {\n    link.setSourcePort(source.getPort(metaLink.getSourcePortId()));\n    link.setTargetPort(target.getPort(metaLink.getTargetPortId()));\n    return link;\n  }\n  return undefined;\n}\n","const vars = {\n  fontFamily: 'Inter, sans-serif',\n  primaryBg: '#f1f1f1',\n  textWhite: '#FFFFFF',\n  chipTextColor: '#F2F2F7',\n  chipBgColor: 'rgba(60, 60, 67, 0.4)',\n\n  chipPrimaryTextColor: 'rgba(255, 255, 255, 0.8)',\n  chipPrimaryBgColor: 'rgba(0, 122, 255, 0.6)',\n\n  breadcrumbLinkColor: '#A2A2A2',\n  breadcrumbTextColor: '#292929',\n\n  buttonPrimaryBgColor: '4353FF',\n  buttonPrimaryBgHoverColor: '#3443E1',\n  buttonPrimaryDisabledBgColor: 'rgba(0, 122, 255, 0.4)',\n\n  listItemActiveBg: '#007AFF',\n  listSelectedTextColor: '#3C3C43',\n  listBoxShadow:\n    '0 0.1875rem 0.5rem rgba(0, 0, 0, 0.12), 0 0.1875rem 0.0625rem rgba(0, 0, 0, 0.04)',\n  listBorderColor: 'rgba(0, 0, 0, 0.04)',\n\n  dividerColor: 'rgba(118, 120, 125, 0.12)',\n\n  dropdownBg: 'rgba(246, 246, 248, 0.8)',\n  dropdownTextColor: 'rgba(60, 60, 67, 0.6)',\n\n  overlayColor: 'rgba(0, 0, 0, 0.4)',\n\n  progressBg: '#E5E5E5',\n  progressBar: '#017AFF',\n  progressShadow: 'inset 0 0 0.0625rem #E3E3E3',\n\n  switchShadow:\n    '0 0.1875rem 0.5rem rgba(0, 0, 0, 0.15), 0 0.1875rem 0.0625rem rgba(0, 0, 0, 0.06)',\n};\n\nexport default vars;\n","import React from 'react';\nimport { Box } from '@mui/system';\nimport { makeStyles } from '@mui/styles';\nimport vars from './assets/styles/variables';\nimport { Divider, List, ListItemButton, ListItemIcon } from '@mui/material';\nimport Move from './assets/svg/move.svg';\nimport Icon from './assets/svg/icon.svg';\nimport Node from './assets/svg/node.svg';\nimport Cursor from './assets/svg/cursor.svg';\nimport Fullscreen from './assets/svg/fullscreen.svg';\n\nconst { textWhite, dividerColor } = vars;\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    zIndex: '5',\n    width: '4rem',\n    background: textWhite,\n    boxShadow:\n      '0 0 3.75rem rgba(0, 0, 0, 0.1), 0 0.5rem 2.5rem -0.625rem rgba(0, 0, 0, 0.1)',\n    borderRadius: '2rem',\n    position: 'fixed',\n    left: '1rem',\n    top: '50%',\n    transform: 'translateY(-50%)',\n\n    '&.right': {\n      left: 'auto',\n      right: '1rem',\n    },\n\n    '& .MuiList-root': {\n      padding: '0.75rem',\n    },\n  },\n\n  node: {\n    margin: '0.25rem 0',\n    '& .MuiDivider-root': {\n      borderColor: dividerColor,\n      width: 'calc(100% - 1.5rem)',\n      margin: '0 auto',\n      border: 'none',\n      borderTop: '0.0625rem solid',\n    },\n\n    '& img': {\n      display: 'block',\n      margin: '1rem 0',\n    },\n  },\n}));\n\nconst Sidebar = () => {\n  const classes = useStyles();\n  return (\n    <Box className={`${classes.root} left`}>\n      <List disablePadding component=\"nav\">\n        <ListItemButton selected>\n          <ListItemIcon>\n            <img\n              src={`data:image/svg+xml;base64,${new Buffer(Cursor).toString(\n                'base64'\n              )}`}\n              alt=\"icon\"\n            />\n          </ListItemIcon>\n        </ListItemButton>\n\n        <ListItemButton>\n          <ListItemIcon>\n            <img\n              src={`data:image/svg+xml;base64,${new Buffer(Move).toString(\n                'base64'\n              )}`}\n              alt=\"move\"\n            />\n          </ListItemIcon>\n        </ListItemButton>\n      </List>\n\n      <Box className={classes.node}>\n        <Divider />\n        <img\n          src={`data:image/svg+xml;base64,${new Buffer(Node).toString(\n            'base64'\n          )}`}\n          alt=\"node\"\n        />\n        <Divider />\n      </Box>\n\n      <List disablePadding component=\"nav\">\n        <ListItemButton disabled>\n          <ListItemIcon>\n            <img\n              src={`data:image/svg+xml;base64,${new Buffer(Icon).toString(\n                'base64'\n              )}`}\n              alt=\"icon\"\n            />\n          </ListItemIcon>\n        </ListItemButton>\n\n        <ListItemButton>\n          <ListItemIcon>\n            <img\n              src={`data:image/svg+xml;base64,${new Buffer(Fullscreen).toString(\n                'base64'\n              )}`}\n              alt=\"fullscreen\"\n            />\n          </ListItemIcon>\n        </ListItemButton>\n      </List>\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","import vars from './components/assets/styles/variables';\n\ntype ThemeVars = {\n  [key: string]: any;\n};\n\nconst applicationTheme = (params: ThemeVars) => {\n  const {\n    primaryBg,\n    fontFamily,\n    chipTextColor,\n    chipBgColor,\n    textWhite,\n    listItemActiveBg,\n    listSelectedTextColor,\n    listBoxShadow,\n    listBorderColor,\n  } = params;\n  return {\n    components: {\n      MuiCssBaseline: {\n        styleOverrides: `\n          html {\n            background: ${primaryBg};\n            font-family: ${fontFamily};\n          }\n          body {\n            background-color:${primaryBg};\n            font-family: ${fontFamily};\n            font-size: 1rem;\n          }\n        `,\n      },\n      MuiList: {\n        styleOverrides: {\n          root: {\n            '&.customSwitch': {\n              padding: '0.125rem',\n              background: chipTextColor,\n              borderRadius: '0.5rem',\n              display: 'flex',\n              '& .MuiListItemButton-root': {\n                padding: '0.25rem 0.75rem',\n                borderRadius: '0.4375rem',\n                width: '10.59375rem',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                '&:not(:last-child)': {\n                  marginBottom: '0',\n                },\n                '&.Mui-disabled': {\n                  opacity: 1,\n                },\n                '&.Mui-selected': {\n                  background: textWhite,\n                  boxShadow: listBoxShadow,\n                  border: `0.03125rem solid ${listBorderColor}`,\n                  '& .MuiTypography-root': {\n                    color: listSelectedTextColor,\n                  },\n                },\n              },\n              '& .MuiChip-root': {\n                marginLeft: '0.25rem',\n              },\n              '& .MuiTypography-root': {\n                fontWeight: 500,\n                fontSize: '0.8125rem',\n                lineHeight: '1.25rem',\n                letterSpacing: '-0.005rem',\n                color: chipBgColor,\n                margin: 0,\n              },\n            },\n          },\n        },\n      },\n      MuiListItemIcon: {\n        styleOverrides: {\n          root: {\n            minWidth: 'inherit',\n          },\n        },\n      },\n      MuiListItemButton: {\n        styleOverrides: {\n          root: {\n            padding: 0,\n            width: '2.5rem',\n            height: '2.5rem',\n            borderRadius: '50%',\n            justifyContent: 'center',\n            backgroundColor: chipTextColor,\n            '&:hover': {\n              backgroundColor: chipTextColor,\n            },\n            '&:not(:last-child)': {\n              marginBottom: '0.75rem',\n            },\n            '&.Mui-selected': {\n              backgroundColor: listItemActiveBg,\n              '&:hover': {\n                backgroundColor: listItemActiveBg,\n              },\n            },\n            '&.Mui-disabled': {\n              opacity: 0.8,\n            },\n          },\n        },\n      },\n    },\n  };\n};\n\nexport default (customVariables: ThemeVars) =>\n  applicationTheme({\n    ...vars,\n    ...customVariables,\n  });\n","export class UnknownParent extends Error {\n    constructor(msg: string) {\n        super(msg);\n        Object.setPrototypeOf(this, UnknownParent.prototype);\n    }\n}","export class BoundingBox {\n    private _left: number\n    private _top: number\n    private _right: number\n    private _bottom: number\n\n    constructor(left: number, top: number, right: number, bottom: number) {\n        this._left = left;\n        this._top = top;\n        this._right = right;\n        this._bottom = bottom;\n    }\n\n\n    // @ts-ignore\n    get left(): number {\n        return this._left;\n    }\n    // @ts-ignore\n    set left(value: number) {\n        this._left = value;\n    }\n    // @ts-ignore\n    get top(): number {\n        return this._top;\n    }\n\n    // @ts-ignore\n    set top(value: number) {\n        this._top = value;\n    }\n\n    // @ts-ignore\n    get right(): number {\n        return this._right;\n    }\n\n    // @ts-ignore\n    set right(value: number) {\n        this._right = value;\n    }\n\n    // @ts-ignore\n    get bottom(): number {\n        return this._bottom;\n    }\n\n    // @ts-ignore\n    set bottom(value: number) {\n        this._bottom = value;\n    }\n\n    getWidth() : number {\n        return this._right - this._left\n    }\n\n    getHeight() : number {\n        return this._top - this._bottom\n    }\n}","import {MetaNodeModel} from \"../react-diagrams/MetaNodeModel\";\nimport { UnknownParent } from \"./Exceptions\";\nimport {BoundingBox} from \"./BoundingBox\";\n\nclass Graph {\n    private readonly root: MetaNodeModel;\n    private readonly children: Map<string, Graph>;\n\n    constructor(metaNodeModel: MetaNodeModel) {\n        this.root = metaNodeModel;\n        this.children = new Map<string, Graph>()\n    }\n\n    getID() : string{\n        return this.root.getID()\n    }\n\n    getRoot() : MetaNodeModel{\n        return this.root\n    }\n\n    getChild(id:string) {\n        return this.children.get(id)\n    }\n\n    addChild(graph: Graph) : void {\n        this.children.set(graph.getID(), graph)\n    }\n\n    getChildren(): MetaNodeModel[] {\n        return Array.from(this.children.values()).map(g => g.getRoot())\n    }\n\n    getDescendancy(): MetaNodeModel[] {\n        const descendancy = this.getChildren()\n        for(const graph of Array.from(this.children.values())){\n            descendancy.push(...graph.getDescendancy())\n        }\n        return descendancy\n    }\n\n    dfs(id: string): MetaNodeModel | boolean {\n        if(this.getID() == id){\n            return this.root\n        }\n        for (let root of Array.from(this.children.values())) {\n            const found = root.dfs(id)\n            if(found){\n                return found\n            }\n        }\n        return false\n    }\n\n    getContainerBoundingBox() : BoundingBox {\n        let width = this.getRoot().width\n        let height = this.getRoot().height\n        let x = this.getRoot().getX()\n        let y = this.getRoot().getY()\n        let left = x - width / 2\n        let right = x + width / 2\n        let top = y + height / 2\n        let bottom = y - height / 2\n        for (let child of Array.from(this.children.values())) {\n            const childBox = child.getContainerBoundingBox()\n            if(childBox.left < left){\n                left = childBox.left\n            }if(childBox.right > right){\n                right = childBox.right\n            }if(childBox.top > top){\n                top = childBox.top\n            }if(childBox.bottom < bottom){\n                bottom = childBox.bottom\n            }\n        }\n        return new BoundingBox(left, top, right, bottom)\n    }\n\n}\n\n\nexport class MetaGraph {\n    private readonly roots: Map<string, Graph>;\n\n    constructor() {\n        this.roots = new Map<string, Graph>()\n    }\n\n    // @ts-ignore\n    addNode(metaNodeModel:MetaNodeModel): void {\n        const path = metaNodeModel.getGraphPath()\n        if(path.length == 1){\n            this.roots.set(metaNodeModel.getID(), new Graph(metaNodeModel))\n        }else{\n            path.pop() // Removes own id from path\n            const parentGraph = this.findGraph(path)\n            parentGraph.addChild(new Graph(metaNodeModel))\n        }\n    }\n\n\n    getNodes() : MetaNodeModel[] {\n        const nodes = []\n        for(const graph of Array.from(this.roots.values())){\n            nodes.push(graph.getRoot())\n            nodes.push(...graph.getDescendancy())\n        }\n        return nodes\n    }\n    // @ts-ignore\n    private findGraph(path: string[]) : Graph {\n        const rootId = path.shift()\n        // @ts-ignore\n        const root = this.roots.get(rootId)\n        if (root == undefined){\n            throw new UnknownParent(`Root with id ${rootId} not found`)\n        }\n        let parent = root\n        while(path.length > 0){\n            const next = path.shift()\n            // @ts-ignore\n            parent = parent.getChild(next)\n            if (parent == undefined){\n                throw new UnknownParent(`Node with id ${next} not found`)\n            }\n        }\n        return parent\n    }\n\n    // @ts-ignore\n    getChildren(parent : MetaNodeModel): MetaNodeModel[] {\n        const path = parent.getGraphPath()\n        if (path.length == 1) {\n            const root = this.roots.get(parent.getID())\n            if (root == undefined) {\n                throw new UnknownParent(`Root with id ${parent.getID()} not found`)\n            } else {\n                return root.getChildren()\n            }\n        } else {\n            const graph = this.findGraph(path)\n            return graph.getChildren()\n        }\n    }\n\n    // @ts-ignore\n    getParent(node : MetaNodeModel): MetaNodeModel | undefined {\n        const path = node.getGraphPath()\n        if (path.length == 1) {\n           return undefined\n        } else {\n            path.pop() // removes own id from path\n            const parentGraph = this.findGraph(path)\n            return parentGraph.getRoot()\n        }\n    }\n\n    getNodeDFS(nodeId: string): MetaNodeModel | undefined {\n        for (let root of Array.from(this.roots.values())) {\n            const found = root.dfs(nodeId)\n            if(found){\n                // @ts-ignore\n                return found\n            }\n        }\n        return undefined\n    }\n\n    getNodeContainerBoundingBox(node: MetaNodeModel) : BoundingBox {\n        const graph = this.findGraph(node.getGraphPath())\n        return graph.getContainerBoundingBox()\n    }\n}\n\n","import {MetaNode} from \"../models/MetaNode\";\nimport {BaseEntityEvent} from \"@projectstorm/react-canvas-core\";\nimport {NodeModel, NodeModelGenerics} from \"@projectstorm/react-diagrams\";\nimport {MetaGraph} from \"../models/MetaGraph\";\nimport {MetaNodeModel} from \"../react-diagrams/MetaNodeModel\";\n\n\nexport function generateMetaGraph(metaNodes: MetaNode[]) : MetaGraph {\n  const metaGraph = new MetaGraph()\n  metaNodes.sort(function(a, b) {\n    return a.getDepth() - b.getDepth();\n  });\n\n  for(const mn of metaNodes){\n\n    const metaNodeModel = mn.toModel()\n\n    metaGraph.addNode(metaNodeModel)\n  }\n  return metaGraph\n}\n\nexport function registerPositionListener(metaNodeModels: MetaNodeModel[], callback: { (event: any): void; (arg0: BaseEntityEvent<NodeModel<NodeModelGenerics>>): void; }){\n  // @ts-ignore\n  metaNodeModels.forEach(metaNodeModel => metaNodeModel.registerListener({positionChanged: (event => callback(event))}))\n}\n\n","import {MetaNodeModel} from \"../react-diagrams/MetaNodeModel\";\nimport {MetaGraph} from \"../models/MetaGraph\";\n\nexport function updateChildrenPosition(metaGraph: MetaGraph, parent: MetaNodeModel): void {\n\n    const children = metaGraph.getChildren(parent);\n    // // @ts-ignore\n    children.forEach(n => {\n        /*\n            No need to explicitly call updateChildrenPosition for n children because it will happen automatically in\n            the event listener\n         */\n        // @ts-ignore\n        n.setPosition(parent.getX() + n.options['localPosition'].x, parent.getY() + n.options['localPosition'].y)\n\n    })\n}\n\nexport function updateNodeLocalPosition(metaGraph: MetaGraph, node: MetaNodeModel): void {\n    /*\n        Updates relative position from the node that moved to its parent\n    */\n    node.updateLocalPosition(metaGraph)\n    // TODO: check if it is still inside the parent or if it started to be inside a node\n}\n\n// @ts-ignore\nexport function updateNodesContainerBoundingBoxes(nodes: MetaNodeModel[], metaGraph: MetaGraph): void {\n    nodes.forEach(n => n.setContainerBoundingBox(metaGraph.getNodeContainerBoundingBox(n)))\n    console.log(nodes)\n}","import * as React from 'react';\nimport { MetaNode } from './models/MetaNode';\nimport { MetaLink } from './models/MetaLink';\nimport { ComponentsMap } from './models/ComponentsMap';\nimport createEngine, { DiagramModel } from '@projectstorm/react-diagrams';\nimport { MetaNodeFactory } from './react-diagrams/MetaNodeFactory';\nimport { MetaLinkFactory } from './react-diagrams/MetaLinkFactory';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport { MetaNodeModel } from './react-diagrams/MetaNodeModel';\nimport { getLinkModel } from './helpers/linksHelper';\nimport { makeStyles } from '@mui/styles';\nimport Sidebar from './components/Sidebar';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport theme from './theme';\nimport { Box } from '@mui/material';\nimport {generateMetaGraph, registerPositionListener} from \"./helpers/nodesHelper\";\nimport {\n  updateChildrenPosition,\n  updateNodeLocalPosition,\n  updateNodesContainerBoundingBoxes\n} from \"./helpers/engineHelper\";\nimport {useEffect} from \"react\";\n\nconst useStyles = makeStyles(_ => ({\n  container: {\n    height: '100%',\n    width: '100%',\n  },\n  canvasContainer: {\n    height: '100%',\n    width: '100%',\n    background: '#fffff',\n  },\n}));\n\ninterface MetaDiagramProps {\n  metaNodes: MetaNode[];\n  metaLinks: MetaLink[];\n  componentsMap: ComponentsMap;\n  wrapperClassName?: string;\n  canvasClassName?: string;\n  metaTheme: {\n    customThemeVariables: {};\n    canvasClassName: string;\n  };\n}\n\nconst MetaDiagram = ({\n  metaNodes,\n  metaLinks,\n  componentsMap,\n  wrapperClassName,\n  metaTheme,\n}: MetaDiagramProps) => {\n  const classes = useStyles();\n\n  // set up the diagram engine\n  const engine = createEngine();\n\n  engine\n    .getNodeFactories()\n    // @ts-ignore\n    .registerFactory(new MetaNodeFactory(componentsMap.nodes));\n\n  engine\n    .getLinkFactories()\n    // @ts-ignore\n    .registerFactory(new MetaLinkFactory(componentsMap.links));\n\n  const metaGraph = generateMetaGraph(metaNodes)\n\n  const repaintCanvas = (event: any) => {\n    const node = event.entity\n    // @ts-ignore\n    updateChildrenPosition(metaGraph, node)\n    // @ts-ignore\n    updateNodeLocalPosition(metaGraph, node)\n    engine.repaintCanvas();\n  }\n\n\n  // set up the diagram model\n\n  const model = new DiagramModel();\n\n  const nodes = metaGraph.getNodes()\n  registerPositionListener(nodes, repaintCanvas)\n\n  const links = metaLinks\n    .map(ml => getLinkModel(ml, metaGraph))\n    .filter(mlm => mlm !== undefined);\n  // @ts-ignore\n  model.addAll(...nodes, ...links);\n\n  // load model into engine\n  engine.setModel(model);\n\n  useEffect(() => {\n    // @ts-ignore\n    updateNodesContainerBoundingBoxes(model.getNodes(), metaGraph)\n    // @ts-ignore\n    model.registerListener({nodesUpdated: (event => updateNodesContainerBoundingBoxes([event.node], metaGraph))})\n  }, [])\n\n\n  const containerClassName = wrapperClassName\n    ? wrapperClassName\n    : classes.container;\n\n  return (\n    <ThemeProvider theme={createTheme(theme(metaTheme?.customThemeVariables))}>\n      <CssBaseline />\n      <Box className={containerClassName}>\n        <Sidebar />\n        <CanvasWidget\n          className={`${classes.canvasContainer} ${metaTheme?.canvasClassName}`}\n          engine={engine}\n        />\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default MetaDiagram;\nexport { MetaNode, MetaLink, MetaNodeModel, ComponentsMap };\nexport { MetaLinkModel } from './react-diagrams/MetaLinkModel';\nexport { Position } from './models/Position';\n"],"names":["ReactDiagramMetaTypes","Position","constructor","x","y","add","otherPosition","sub","MetaNodeModel","NodeModel","options","type","META_NODE","addPort","DefaultPortModel","in","name","getGraphPath","getOptions","calculateLocalPosition","metaGraph","worldPosition","getX","getY","parent","getParent","parentWorldPosition","getContainerBoundingBox","updateLocalPosition","setContainerBoundingBox","containerBoundingBox","MetaNode","id","shape","position","Map","set","getId","get","graphPath","push","getWorldPosition","getDepth","toModel","optionsMap","metaNodeModel","Object","fromEntries","setPosition","MetaLinkModel","DefaultLinkModel","META_LINK","MetaLink","sourceId","sourcePortId","targetId","targetPortId","getSourceId","getSourcePortId","getTargetId","getTargetPortId","ComponentsMap","nodesMap","linksMap","nodes","links","UnknownTypeWidget","React","MetaNodeFactory","AbstractReactFactory","componentsMap","generateModel","generateReactWidget","event","has","model","ReactComponentType","key","engine","MetaLinkFactory","DefaultLinkFactory","generateLinkSegment","selected","path","getLinkModel","metaLink","link","source","getNodeDFS","target","setSourcePort","getPort","setTargetPort","undefined","vars","fontFamily","primaryBg","textWhite","chipTextColor","chipBgColor","chipPrimaryTextColor","chipPrimaryBgColor","breadcrumbLinkColor","breadcrumbTextColor","buttonPrimaryBgColor","buttonPrimaryBgHoverColor","buttonPrimaryDisabledBgColor","listItemActiveBg","listSelectedTextColor","listBoxShadow","listBorderColor","dividerColor","dropdownBg","dropdownTextColor","overlayColor","progressBg","progressBar","progressShadow","switchShadow","useStyles","makeStyles","root","zIndex","width","background","boxShadow","borderRadius","left","top","transform","right","padding","node","margin","borderColor","border","borderTop","display","Sidebar","classes","Box","className","List","disablePadding","component","ListItemButton","ListItemIcon","src","Buffer","Cursor","toString","alt","Move","Divider","Node","disabled","Icon","Fullscreen","applicationTheme","params","components","MuiCssBaseline","styleOverrides","MuiList","alignItems","justifyContent","marginBottom","opacity","color","marginLeft","fontWeight","fontSize","lineHeight","letterSpacing","MuiListItemIcon","minWidth","MuiListItemButton","height","backgroundColor","customVariables","UnknownParent","Error","msg","setPrototypeOf","prototype","BoundingBox","bottom","_left","_top","_right","_bottom","value","getWidth","getHeight","Graph","children","getID","getRoot","getChild","addChild","graph","getChildren","Array","from","values","map","g","getDescendancy","descendancy","dfs","found","child","childBox","MetaGraph","roots","addNode","length","pop","parentGraph","findGraph","getNodes","rootId","shift","next","nodeId","getNodeContainerBoundingBox","generateMetaGraph","metaNodes","sort","a","b","mn","registerPositionListener","metaNodeModels","callback","forEach","registerListener","positionChanged","updateChildrenPosition","n","updateNodeLocalPosition","updateNodesContainerBoundingBoxes","console","log","_","container","canvasContainer","MetaDiagram","metaLinks","wrapperClassName","metaTheme","createEngine","getNodeFactories","registerFactory","getLinkFactories","repaintCanvas","entity","DiagramModel","ml","filter","mlm","addAll","setModel","useEffect","nodesUpdated","containerClassName","ThemeProvider","theme","createTheme","customThemeVariables","CssBaseline","CanvasWidget","canvasClassName"],"mappings":"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"}